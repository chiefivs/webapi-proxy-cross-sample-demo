{
  "openapi" : "3.0.0",
  "info" : {
    "description" : "Reads customer locations and products",
    "title" : "Customer Locations and Products API of MyEnterprise",
    "version" : "1.0.0"
  },
  "servers" : [ {
    "url" : "http://localhost:8000/api/StandardProducts/"
  } ],
  "paths" : {
    "/HealthCheck" : {
      "get" : {
        "description" : "Healthcheck funtion to return OK if service is up and running",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HealthCheckResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Healthcheck function that returns OK",
        "tags" : [ "HealthCheck" ]
      }
    },
    "/Locations" : {
      "post" : {
        "description" : "The locations endpoint returns the list of locations for certain customer KUMS number",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Locations for KUMS",
        "tags" : [ "Locations" ]
      }
    },
    "/LocationsForMapWs" : {
      "post" : {
        "description" : "The locations endpoint returns the list of locations for certain customer KUMS number",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationsWsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationsWsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Locations for WholeSale map",
        "tags" : [ "Locations" ]
      }
    },
    "/LocationsCount" : {
      "post" : {
        "description" : "The locations count endpoint returns the count of locations for certain customer KUMS number",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationsCountRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LocationsCountResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Locations count for KUMS",
        "tags" : [ "Locations" ]
      }
    },
    "/Location" : {
      "post" : {
        "description" : "The location endpoint returns a location for certain LocationId and customer KUMS number",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LocationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Location"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Location for KUMS by LocationId",
        "tags" : [ "Locations" ]
      }
    },
    "/UpdateLocation" : {
      "post" : {
        "description" : "Update a location by LocationId with a customer defined name",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateLocationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "the Location was updated successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Update a location by LocationId with a customer defined name",
        "tags" : [ "Locations" ]
      }
    },
    "/CheckFullLoadProgress" : {
      "post" : {
        "description" : "Service to check pending imports",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CheckFullLoadProgressResult"
                }
              }
            },
            "description" : "the checking was performed successfully"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Service to check pending imports",
        "tags" : [ "Locations" ]
      }
    },
    "/GetProductGroupFilters" : {
      "post" : {
        "description" : "Returns list of product names (level2) for filters",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetProductGroupFiltersResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns list of product names (level2) for filters",
        "tags" : [ "Locations" ]
      }
    },
    "/ProductsByLocation" : {
      "post" : {
        "description" : "The locations endpoint returns the list of Products for certain customer KUMS numbers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductsByLocationRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductForLocationResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns a list of Products for a loation",
        "tags" : [ "Products" ]
      }
    },
    "/ProductCategories" : {
      "post" : {
        "description" : "The ProductCategories endpoint returns the list of all Product Categories that are enabled for customer KUMS numbers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCategoriesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductCategoriesResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Product Categories of Products enabled for certain KUMS numbers",
        "tags" : [ "Products" ]
      }
    },
    "/ProductCategoriesAllLinkVisibility" : {
      "get" : {
        "description" : "The ProductCategoriesAllLinkVisibility endpoint returns the list of all Models with ProductMainCategory and ProductSubCategory for which 'Show all' link  should be disabled",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductCategoriesAllLinkVisibilityResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Visibility of 'Show all' link for some Product Categories",
        "tags" : [ "Products" ]
      }
    },
    "/ProductServices" : {
      "post" : {
        "description" : "The ProductServices endpoint returns the list of services related to given VertragId, Rufnummer and AonKundennummerId",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductServicesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductServicesResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "All Services related to given VertragId, Rufnummer and AonKundennummerId",
        "tags" : [ "Products" ]
      }
    },
    "/ProductsByNameAndAonCustomerNumber" : {
      "post" : {
        "description" : "returns the product for a certain name and aon customer number",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductsByNameAndAonCustomerNumber"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductDetail"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "returns the product for a certain name and aon customer number",
        "tags" : [ "Products" ]
      }
    },
    "/ProductsByGroup" : {
      "post" : {
        "description" : "The ProductsByGroup endpoint returns the list of all Products contained in a certain Product Group that are enabled for customer KUMS numbers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductsByGroupRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductsByGroupResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "All Products contained in a Product Group for certain KUMS numbers",
        "tags" : [ "Products" ]
      }
    },
    "/ProductsBySubCategory" : {
      "post" : {
        "description" : "The ProductsBySubCategory endpoint returns the list of all Products contained in a certain Product SubCategory that are enabled for customer KUMS numbers",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductsBySubCategoryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductsBySubCategoryResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "All Products contained in a Product SubCategory for certain KUMS numbers",
        "tags" : [ "Products" ]
      }
    },
    "/HasHcsProduct" : {
      "post" : {
        "description" : "the method checks if the customer has an HCS product",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/HasHcsProductRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/HasHcsProductResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Has an HCS product for KUMS",
        "tags" : [ "Products" ]
      }
    },
    "/MplsDetails" : {
      "post" : {
        "description" : "The MplsDetails endpoint returns a non paged object that contains all information about the MPLS product, received by elastic search queries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MplsDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MPLSDetails"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns detailed information about an MPLS product",
        "tags" : [ "Products" ]
      }
    },
    "/ProductsWithLocations" : {
      "post" : {
        "description" : "The ProductsWithLocations endpoint returns a paged object that contains all information about all products",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductsWithLocationsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductsWithLocationsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns detailed information about products",
        "tags" : [ "Products" ]
      }
    },
    "/ProductsForSubscription" : {
      "post" : {
        "description" : "the method returns single subscription with products",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductsForSubscriptionRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductsForSubscriptionResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Products for subscription by call number",
        "tags" : [ "Products" ]
      }
    },
    "/GetGrantedKumsForMonitoringProduct" : {
      "post" : {
        "description" : "Returns corresponding kums which have a monitoring product",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetGrantedKumsForMonitoringProductRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetGrantedKumsForMonitoringProductResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Gets KUMs numbers granted for monitoring product",
        "tags" : [ "Products" ]
      }
    },
    "/GetGrantedKumsForDataCenterProduct" : {
      "post" : {
        "description" : "Returns corresponding kums which have a managedDataCenter",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetGrantedKumsForDataCenterProductRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetGrantedKumsForDataCenterResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Gets KUMs numbers granted for managed DataCenter",
        "tags" : [ "Products" ]
      }
    },
    "/GetMarketplaceProductDetails" : {
      "post" : {
        "description" : "Gets list of BAN's for list of given KUMS's",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetMarketplaceProductDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetMarketplaceProductDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Gets list of BAN's for list of given KUMS's",
        "tags" : [ "Products" ]
      }
    },
    "/NumberingServiceProductDetails" : {
      "post" : {
        "description" : "Gets list of numbering services for list of given KUMS's",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NumberingServiceProductDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NumberingServiceProductDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Gets list of numbering services",
        "tags" : [ "Products" ]
      }
    },
    "/NumberingServiceProductAdvancedSearch" : {
      "post" : {
        "description" : "Gets list of numbering services for list of given KUMS's",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NumberingServiceProductAdvancedSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NumberingServiceProductDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Gets list of numbering services with advancedsearch",
        "tags" : [ "Products" ]
      }
    },
    "/LicenseProductDetails" : {
      "post" : {
        "description" : "Gets list of licenses for list of given KUMS's",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LicenseProductDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LicenseProductDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Gets list of licenses",
        "tags" : [ "Products" ]
      }
    },
    "/GetCustomerMarketplaceSubscriptions" : {
      "post" : {
        "description" : "Gets list of  marketplace product subscriptions for given KUMS",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetCustomerMarketplaceSubscriptionsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetCustomerMarketplaceSubscriptionsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Gets list of marketplace product subscriptions for given KUMS",
        "tags" : [ "Products" ]
      }
    },
    "/GetTusResellerProductDetails" : {
      "post" : {
        "description" : "The endpoint returns a non paged object that contains all information about the TuS Reseller product, received by elastic search queries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetTusResellerProductDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TusResellerProductDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns detailed information about a TuS Reseller product",
        "tags" : [ "Products" ]
      }
    },
    "/GetAvailableAccessLines" : {
      "post" : {
        "description" : "Returns information about availible access lines",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetAvailableAccessLinesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AvailableAccessLinesResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns information about availible access lines",
        "tags" : [ "Products" ]
      }
    },
    "/GetTusZielerweiterungProductDetails" : {
      "post" : {
        "description" : "The endpoint returns a non paged object that contains all information about A1 Object security Transmission Service (level3) products except TuS Reseller (level4) product, received by elastic search queries",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetTusZielerweiterungProductDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TusZielerweiterungProductDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns information about A1 Object security Transmission Service (level3) products except TuS Reseller (level4) product",
        "tags" : [ "Products" ]
      }
    },
    "/GetExternalSlaCodes" : {
      "post" : {
        "description" : "Returns clear text corresponding to internal SLA code. If no mapping exists then returns the input value",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetExternalSlaCodesRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ExternalSlaCodes"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns clear text corresponding to internal SLA code. If no mapping exists then returns the input value",
        "tags" : [ "Products" ]
      }
    },
    "/GetProductsLevel2ByLocations" : {
      "post" : {
        "description" : "Returns list of existing Level_2_ProductSubCategory for each kums-locationId pair",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetProductsLevel2ByLocationsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetProductsLevel2ByLocationsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns list of existing Level_2_ProductSubCategory for each kums-locationId pair",
        "tags" : [ "Products" ]
      }
    },
    "/GetProductDetailsExportConfig" : {
      "post" : {
        "description" : "Returns list of columns that can be included into details report",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetProductDetailsExportConfigRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetProductDetailsExportConfigResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns list of columns that can be included into details report",
        "tags" : [ "Products" ]
      }
    },
    "/GetTusEquipment" : {
      "post" : {
        "description" : "Returns list of equipments for Tus products",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetTusEquipmentsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetTusEquipmentsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns list of equipments for Tus products",
        "tags" : [ "Products" ]
      }
    },
    "/GetEtherlinkProducts" : {
      "post" : {
        "description" : "Get sorted, paged list of Etherlink. Allow searching",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetEtherlinkRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataProductsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get list of Etherlink",
        "tags" : [ "Products" ]
      }
    },
    "/GetEtherlinkProductDetails" : {
      "post" : {
        "description" : "Get Etherlink product details by KumsId and LineNumber",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetEtherlinkDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataProduct"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get Etherlink product details by KumsId and LineNumber",
        "tags" : [ "Products" ]
      }
    },
    "/MobileProductDetails" : {
      "post" : {
        "description" : "The MobileProductDetails endpoint returns the list of",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/MobileProductDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/MobileProductDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "MobileProductDetails",
        "tags" : [ "MobileProducts" ]
      }
    },
    "/GetDeviceAsAServiceList" : {
      "post" : {
        "description" : "list of Device As A Service",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/DeviceAsAServiceRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DeviceAsAServiceResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "list of Device As A Service",
        "tags" : [ "MobileProducts" ]
      }
    },
    "/PaymentProductDetails" : {
      "post" : {
        "description" : "The PaymentProductDetails endpoint returns the list of",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PaymentProductDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentProductDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "PaymentProductDetails",
        "tags" : [ "PaymentProducts" ]
      }
    },
    "/Portals" : {
      "post" : {
        "description" : "The Portals endpoint returns a list of generic portals for a product level3 category",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PortalsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortalsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns detailed information about Portals",
        "tags" : [ "Portals" ]
      }
    },
    "/PortalsBySubCategory" : {
      "post" : {
        "description" : "The Portals endpoint returns a list of generic portals for a product level3 category",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PortalsBySubCategoryRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortalsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns detailed information about Portals",
        "tags" : [ "Portals" ]
      }
    },
    "/ServicePortals" : {
      "post" : {
        "description" : "Get ServicePortals for kums and for different tabs",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServicePortalsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortalsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get ServicePortals",
        "tags" : [ "Portals" ]
      }
    },
    "/GetAllPortals" : {
      "post" : {
        "description" : "Returns list of all Portals",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortalsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns list of all Portals",
        "tags" : [ "Portals" ]
      }
    },
    "/GetAllServicePortals" : {
      "post" : {
        "description" : "Returns list of all Service Portals",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PortalsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns list of all Service Portals",
        "tags" : [ "Portals" ]
      }
    },
    "/Portal" : {
      "post" : {
        "description" : "The Portal endpoint returns a Portal by it name",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PortalRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Portal"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns detailed information about a Portal by it name",
        "tags" : [ "Portal" ]
      }
    },
    "/ServicePortal" : {
      "post" : {
        "description" : "The Service Portal endpoint returns a service portal by it name",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServicePortalRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Portal"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns detailed information about a service portal by its uid",
        "tags" : [ "Portal" ]
      }
    },
    "/GetAllProductsDocuments" : {
      "post" : {
        "description" : "The endpoint returns the list of products documents config info",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetAllProductsDocumentsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AllProductsDocumentsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get documents config info for all products",
        "tags" : [ "ProductDocument" ]
      }
    },
    "/GetProductDocumentFile" : {
      "post" : {
        "description" : "returns file",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetProductDocumentFileRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "description" : "A product document file as byte array."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get product document file content",
        "tags" : [ "ProductDocument" ]
      }
    },
    "/GetProductsOverview" : {
      "post" : {
        "description" : "Get list of types of DataProducts (MPLS, Etherlink)",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetDataProductsOverviewRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductsOverviewResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get list of types of DataProducts (MPLS, Etherlink)",
        "tags" : [ "ProductOverview" ]
      }
    },
    "/GetDataProducts" : {
      "post" : {
        "description" : "Get sorted, paged list of DataProducts (MPLS or/and Etherlink). Allow searching",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetDataProductsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataProductsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get list of DataProducts (MPLS or/and Etherlink)",
        "tags" : [ "DataProducts" ]
      }
    },
    "/GetDataProductsCount" : {
      "post" : {
        "description" : "Get count of DataProducts (MPLS or/and Etherlink). Allow searching",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetDataProductsCountRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataProductsCountResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get count of DataProducts (MPLS or/and Etherlink)",
        "tags" : [ "DataProducts" ]
      }
    },
    "/GetDataProductsSearchableColumns" : {
      "post" : {
        "description" : "The endpoint returns a list of searchable DataProducts columns with translation and validators",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetDataProductsSearchableColumnsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchableColumnsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns all searchable columns for DataProducts.",
        "tags" : [ "DataProducts" ]
      }
    },
    "/GetDataProductDetails" : {
      "post" : {
        "description" : "Get data product details by KumsId and LineNumber",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetDataProductDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/DataProduct"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get data product details by KumsId and LineNumber",
        "tags" : [ "DataProducts" ]
      }
    },
    "/GetAddressDetails" : {
      "post" : {
        "description" : "Get list of Locations, where current location is location A or location B",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetAddressesDetailsRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressDetailsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get list of Locations, where current location is location A or location B",
        "tags" : [ "Addresses" ]
      }
    },
    "/GetAddressesByKumsList" : {
      "post" : {
        "description" : "Get list of wholesale Locations for specific Kums Ids",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetAddressesByKumsListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetAddressesResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get list of wholesale Locations for specific Kums Ids",
        "tags" : [ "Addresses" ]
      }
    },
    "/AddressesCount" : {
      "post" : {
        "description" : "The Addresses count endpoint returns the count of locations for certain customer KUMS number",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressesCountRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressesCountResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Addresses count for KUMS",
        "tags" : [ "Addresses" ]
      }
    },
    "/GetAddressSearchableColumns" : {
      "post" : {
        "description" : "The endpoint returns a list of searchable Address columns with translation and validators",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchableColumnsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns all searchable columns for Address.",
        "tags" : [ "Addresses" ]
      }
    },
    "/GetPscList" : {
      "post" : {
        "description" : "Returns a list of Product Spec Characteristic",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetPscListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PscListResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns a list of Product Spec Characteristic",
        "tags" : [ "ProductCatalog" ]
      }
    },
    "/SetPscvVisibility" : {
      "post" : {
        "description" : "Mark a value of Product Spec Characteristic as visible or unvisible in Product details view",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SetPscvVisibilityRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Mark a value of Product Spec Characteristic as visible or unvisible in Product details view",
        "tags" : [ "ProductCatalog" ]
      }
    },
    "/GetBillingInvoicesAdvancedSearch" : {
      "post" : {
        "description" : "Gets list of invoices",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BillingInvoicesAdvancedSearchRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingInvoicesResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Gets list of invoices",
        "tags" : [ "BillingInvoice" ]
      }
    },
    "/GetBillingInvoicesSearchableColumns" : {
      "post" : {
        "description" : "The endpoint returns a list of searchable BillingInvoices columns with translation and validators",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SearchableColumnsResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Returns all searchable columns for BillingInvoices.",
        "tags" : [ "BillingInvoice" ]
      }
    },
    "/GetBillingInvoiceFile" : {
      "post" : {
        "description" : "returns file",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/GetBillingInvoiceFileRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BillingInvoiceFileResult"
                }
              }
            },
            "description" : "An invoice PDF file content."
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Get invoice PDF file by invoice number",
        "tags" : [ "BillingInvoice" ]
      }
    },
    "/GetVirtualFirewallList" : {
      "post" : {
        "description" : "The VirtualFirewallDetails endpoint returns the list of",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VirtualFirewallListRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/VirtualFirewallResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "list of  A1 Virtual Firewall",
        "tags" : [ "Firewall" ]
      }
    },
    "/ValidateWebAcNumber" : {
      "post" : {
        "description" : "Verify WebAc number (does it belongs to the product A1 Virtual Firewall or A1 Business Firewall)",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ValidateWebAcNumberRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValidateWebAcNumberResult"
                }
              }
            },
            "description" : "Success"
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Bad Request e.g. validation error shows data issues"
          },
          "415" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Non-parseable request/response"
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Internal server error"
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Connection failure"
          },
          "504" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "External interface timed out"
          },
          "default" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemDetails"
                }
              }
            },
            "description" : "Unexpected error"
          }
        },
        "summary" : "Verify WebAc number (does it belongs to the product A1 Virtual Firewall or A1 Business Firewall)",
        "tags" : [ "Firewall" ]
      }
    }
  },
  "components" : {
    "responses" : {
      "BadRequest" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProblemDetails"
            }
          }
        },
        "description" : "Bad Request e.g. validation error shows data issues"
      },
      "InternalServerError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProblemDetails"
            }
          }
        },
        "description" : "Internal server error"
      },
      "NonParseableRequestOrResponse" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProblemDetails"
            }
          }
        },
        "description" : "Non-parseable request/response"
      },
      "ConnectionFailure" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProblemDetails"
            }
          }
        },
        "description" : "Connection failure"
      },
      "ExternalInterfaceTimeOut" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProblemDetails"
            }
          }
        },
        "description" : "External interface timed out"
      },
      "UnexpectedError" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/ProblemDetails"
            }
          }
        },
        "description" : "Unexpected error"
      }
    },
    "schemas" : {
      "HealthCheckResult" : {
        "example" : {
          "Result" : "Result"
        },
        "properties" : {
          "Result" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LocationsResult" : {
        "example" : {
          "TotalCount" : 5,
          "Items" : [ {
            "StreetName" : "StreetName",
            "HouseNumber" : "HouseNumber",
            "LineId" : "LineId",
            "LocationId" : 0,
            "Latitude" : 6.027456183070403,
            "IsHiddenOnMap" : true,
            "City" : "City",
            "Postcode" : "Postcode",
            "Longitude" : 1.4658129805029452,
            "LineNumber" : "LineNumber",
            "ProductLevel2Names" : [ "ProductLevel2Names", "ProductLevel2Names" ],
            "BranchNumber" : "BranchNumber",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "State" : "State",
            "Country" : "Country",
            "Street" : "Street"
          }, {
            "StreetName" : "StreetName",
            "HouseNumber" : "HouseNumber",
            "LineId" : "LineId",
            "LocationId" : 0,
            "Latitude" : 6.027456183070403,
            "IsHiddenOnMap" : true,
            "City" : "City",
            "Postcode" : "Postcode",
            "Longitude" : 1.4658129805029452,
            "LineNumber" : "LineNumber",
            "ProductLevel2Names" : [ "ProductLevel2Names", "ProductLevel2Names" ],
            "BranchNumber" : "BranchNumber",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "State" : "State",
            "Country" : "Country",
            "Street" : "Street"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/Location"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "LocationsCountResult" : {
        "example" : {
          "Count" : 0
        },
        "properties" : {
          "Count" : {
            "description" : "Locations count.",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "LocationsWsResult" : {
        "example" : {
          "TotalCount" : 1,
          "Items" : [ {
            "AddressLine2" : "AddressLine2",
            "AddressLine1" : "AddressLine1",
            "ZipCode" : "ZipCode",
            "LkmsId" : "LkmsId",
            "Latitude" : 0.8008281904610115,
            "City" : "City",
            "Longitude" : 6.027456183070403,
            "LocationName" : "LocationName"
          }, {
            "AddressLine2" : "AddressLine2",
            "AddressLine1" : "AddressLine1",
            "ZipCode" : "ZipCode",
            "LkmsId" : "LkmsId",
            "Latitude" : 0.8008281904610115,
            "City" : "City",
            "Longitude" : 6.027456183070403,
            "LocationName" : "LocationName"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/LocationWs"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Location" : {
        "example" : {
          "StreetName" : "StreetName",
          "HouseNumber" : "HouseNumber",
          "LineId" : "LineId",
          "LocationId" : 0,
          "Latitude" : 6.027456183070403,
          "IsHiddenOnMap" : true,
          "City" : "City",
          "Postcode" : "Postcode",
          "Longitude" : 1.4658129805029452,
          "LineNumber" : "LineNumber",
          "ProductLevel2Names" : [ "ProductLevel2Names", "ProductLevel2Names" ],
          "BranchNumber" : "BranchNumber",
          "Kums" : "Kums",
          "LocationDescription" : "LocationDescription",
          "State" : "State",
          "Country" : "Country",
          "Street" : "Street"
        },
        "properties" : {
          "LocationId" : {
            "description" : "The location ID.",
            "type" : "integer"
          },
          "LocationDescription" : {
            "description" : "The location description.",
            "maxLength" : 300,
            "type" : "string"
          },
          "Country" : {
            "description" : "The location country.",
            "maxLength" : 100,
            "type" : "string"
          },
          "State" : {
            "description" : "The location state within country.",
            "maxLength" : 100,
            "type" : "string"
          },
          "City" : {
            "description" : "The location city.",
            "maxLength" : 100,
            "type" : "string"
          },
          "StreetName" : {
            "description" : "The location street name.",
            "type" : "string"
          },
          "HouseNumber" : {
            "description" : "The location house number.",
            "type" : "string"
          },
          "Street" : {
            "description" : "The location street (street name + house number).",
            "maxLength" : 100,
            "type" : "string"
          },
          "Postcode" : {
            "description" : "The location ZIP.",
            "maxLength" : 30,
            "type" : "string"
          },
          "Latitude" : {
            "description" : "The location latitude.",
            "format" : "double",
            "nullable" : true,
            "type" : "number"
          },
          "Longitude" : {
            "description" : "The location longitude.",
            "format" : "double",
            "nullable" : true,
            "type" : "number"
          },
          "Kums" : {
            "description" : "The customer ID.",
            "type" : "string"
          },
          "LineId" : {
            "description" : "The line ID.",
            "type" : "string"
          },
          "LineNumber" : {
            "description" : "The line number combined from onkz, tn_num.",
            "type" : "string"
          },
          "IsHiddenOnMap" : {
            "description" : "is field hidden on map",
            "type" : "boolean"
          },
          "BranchNumber" : {
            "description" : "branch number for location",
            "maxLength" : 100,
            "type" : "string"
          },
          "ProductLevel2Names" : {
            "description" : "List of product names (Level_2_ProductSubCategories) on this location",
            "items" : {
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "LocationWs" : {
        "example" : {
          "AddressLine2" : "AddressLine2",
          "AddressLine1" : "AddressLine1",
          "ZipCode" : "ZipCode",
          "LkmsId" : "LkmsId",
          "Latitude" : 0.8008281904610115,
          "City" : "City",
          "Longitude" : 6.027456183070403,
          "LocationName" : "LocationName"
        },
        "properties" : {
          "LkmsId" : {
            "description" : "The location ID.",
            "type" : "string"
          },
          "LocationName" : {
            "description" : "The location description.",
            "maxLength" : 300,
            "type" : "string"
          },
          "City" : {
            "description" : "The location city.",
            "maxLength" : 100,
            "type" : "string"
          },
          "AddressLine1" : {
            "description" : "The first address line",
            "type" : "string"
          },
          "AddressLine2" : {
            "description" : "The second address line",
            "type" : "string"
          },
          "ZipCode" : {
            "description" : "The location ZIP.",
            "maxLength" : 30,
            "type" : "string"
          },
          "Latitude" : {
            "description" : "The location latitude.",
            "format" : "double",
            "type" : "number"
          },
          "Longitude" : {
            "description" : "The location longitude.",
            "format" : "double",
            "type" : "number"
          }
        },
        "type" : "object"
      },
      "PortalsResult" : {
        "example" : {
          "Items" : [ {
            "Uid" : "Uid",
            "Description" : "Description",
            "AdditionalInfoLink" : "AdditionalInfoLink",
            "IsInternalUrl" : true,
            "Ordering" : 0,
            "Level1ProductMainCategories" : [ "Level1ProductMainCategories", "Level1ProductMainCategories" ],
            "Link" : "Link",
            "Name" : "Name"
          }, {
            "Uid" : "Uid",
            "Description" : "Description",
            "AdditionalInfoLink" : "AdditionalInfoLink",
            "IsInternalUrl" : true,
            "Ordering" : 0,
            "Level1ProductMainCategories" : [ "Level1ProductMainCategories", "Level1ProductMainCategories" ],
            "Link" : "Link",
            "Name" : "Name"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/Portal"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Portal" : {
        "description" : "A generic portal object with name link and description",
        "example" : {
          "Uid" : "Uid",
          "Description" : "Description",
          "AdditionalInfoLink" : "AdditionalInfoLink",
          "IsInternalUrl" : true,
          "Ordering" : 0,
          "Level1ProductMainCategories" : [ "Level1ProductMainCategories", "Level1ProductMainCategories" ],
          "Link" : "Link",
          "Name" : "Name"
        },
        "properties" : {
          "Name" : {
            "description" : "Name of the generic portal",
            "type" : "string"
          },
          "Link" : {
            "description" : "Link of the generic portal",
            "type" : "string"
          },
          "AdditionalInfoLink" : {
            "description" : "Link for additional information of the portal",
            "type" : "string"
          },
          "Description" : {
            "description" : "Short description of the generic portal",
            "type" : "string"
          },
          "Level1ProductMainCategories" : {
            "description" : "List of level 1 categories of the portal products",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "Uid" : {
            "description" : "Uid of generic portal, is used for pin tile identification",
            "type" : "string"
          },
          "IsInternalUrl" : {
            "description" : "Flag to identify if link is internal or not",
            "type" : "boolean"
          },
          "Ordering" : {
            "description" : "how we need to order  the portals",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ProductForLocationResult" : {
        "example" : {
          "ProductsWithCategory" : [ {
            "ProductGroup" : "ProductGroup",
            "VertragId" : "VertragId",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "LineId" : "LineId",
            "DetailType" : "DetailType",
            "LkmsId" : "LkmsId",
            "ProductNumber" : "ProductNumber",
            "LineNumber" : "LineNumber",
            "ProductSubCategory" : "ProductSubCategory",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "ProductService" : "ProductService",
            "ProductMainCategory" : "ProductMainCategory",
            "AonCustomerNumber" : "AonCustomerNumber",
            "Rufnummer" : "Rufnummer"
          }, {
            "ProductGroup" : "ProductGroup",
            "VertragId" : "VertragId",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "LineId" : "LineId",
            "DetailType" : "DetailType",
            "LkmsId" : "LkmsId",
            "ProductNumber" : "ProductNumber",
            "LineNumber" : "LineNumber",
            "ProductSubCategory" : "ProductSubCategory",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "ProductService" : "ProductService",
            "ProductMainCategory" : "ProductMainCategory",
            "AonCustomerNumber" : "AonCustomerNumber",
            "Rufnummer" : "Rufnummer"
          } ],
          "GroupCounts" : [ {
            "GroupName" : "GroupName",
            "Count" : 0
          }, {
            "GroupName" : "GroupName",
            "Count" : 0
          } ]
        },
        "properties" : {
          "ProductsWithCategory" : {
            "description" : "Contains one entry for each Product Main Category and Product Sub Category combination",
            "items" : {
              "$ref" : "#/components/schemas/ProductsWithCategory"
            },
            "type" : "array"
          },
          "GroupCounts" : {
            "items" : {
              "$ref" : "#/components/schemas/GroupCount"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "CheckFullLoadProgressResult" : {
        "example" : {
          "IsBusy" : true
        },
        "properties" : {
          "IsBusy" : {
            "description" : "True if the fulload process is in-progress, false if not",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "ProductsWithCategory" : {
        "description" : "Describes the product with its categories and calling number",
        "example" : {
          "ProductGroup" : "ProductGroup",
          "VertragId" : "VertragId",
          "CallNumber" : {
            "CC" : "CC",
            "SN" : "SN",
            "NDC" : "NDC"
          },
          "LineId" : "LineId",
          "DetailType" : "DetailType",
          "LkmsId" : "LkmsId",
          "ProductNumber" : "ProductNumber",
          "LineNumber" : "LineNumber",
          "ProductSubCategory" : "ProductSubCategory",
          "Kums" : "Kums",
          "LocationDescription" : "LocationDescription",
          "ProductService" : "ProductService",
          "ProductMainCategory" : "ProductMainCategory",
          "AonCustomerNumber" : "AonCustomerNumber",
          "Rufnummer" : "Rufnummer"
        },
        "properties" : {
          "ProductMainCategory" : {
            "description" : "Name of Main Category (Level 1) of the Product Groups",
            "maxLength" : 100,
            "type" : "string"
          },
          "ProductSubCategory" : {
            "description" : "Name of Main Category (Level 2) of the Product Groups",
            "maxLength" : 100,
            "type" : "string"
          },
          "ProductGroup" : {
            "description" : "Name of group Category (Level 3) of the Product Groups",
            "maxLength" : 100,
            "type" : "string"
          },
          "ProductService" : {
            "description" : "Name of Service Category (Level 4) of the Product Groups",
            "maxLength" : 100,
            "type" : "string"
          },
          "ProductNumber" : {
            "description" : "Phone Number of the Product",
            "maxLength" : 30,
            "type" : "string"
          },
          "AonCustomerNumber" : {
            "description" : "The aon customernumber of the product",
            "maxLength" : 100,
            "type" : "string"
          },
          "Rufnummer" : {
            "description" : "The Phone Number (Rufnummer) of the product",
            "maxLength" : 100,
            "type" : "string"
          },
          "VertragId" : {
            "description" : "The contract number of the product",
            "maxLength" : 100,
            "type" : "string"
          },
          "DetailType" : {
            "description" : "The type of detail page that should be displayed (e.g. MPLS details)",
            "maxLength" : 100,
            "type" : "string"
          },
          "CallNumber" : {
            "$ref" : "#/components/schemas/CallNumber"
          },
          "Kums" : {
            "description" : "The customer ID.",
            "type" : "string"
          },
          "LkmsId" : {
            "description" : "The location ID.",
            "type" : "string"
          },
          "LocationDescription" : {
            "description" : "The location description.",
            "maxLength" : 300,
            "type" : "string"
          },
          "LineId" : {
            "description" : "The line ID.",
            "type" : "string"
          },
          "LineNumber" : {
            "description" : "The line number.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProductCategoriesResult" : {
        "example" : {
          "ProductCategories" : [ {
            "ProductSubCategory" : "ProductSubCategory",
            "ProductMainCategory" : "ProductMainCategory",
            "ProductGroups" : [ {
              "Name" : "Name"
            }, {
              "Name" : "Name"
            } ]
          }, {
            "ProductSubCategory" : "ProductSubCategory",
            "ProductMainCategory" : "ProductMainCategory",
            "ProductGroups" : [ {
              "Name" : "Name"
            }, {
              "Name" : "Name"
            } ]
          } ],
          "GroupCounts" : [ {
            "GroupName" : "GroupName",
            "Count" : 0
          }, {
            "GroupName" : "GroupName",
            "Count" : 0
          } ],
          "TotalGroupCount" : 0
        },
        "properties" : {
          "ProductCategories" : {
            "description" : "Contains one entry for each Product Main Category and Product Sub Category combination",
            "items" : {
              "$ref" : "#/components/schemas/ProductCategory"
            },
            "type" : "array"
          },
          "GroupCounts" : {
            "items" : {
              "$ref" : "#/components/schemas/GroupCount"
            },
            "type" : "array"
          },
          "TotalGroupCount" : {
            "description" : "The total number of level 1 groups for the given kumsIds",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ProductCategory" : {
        "description" : "Product Groups for a certain Product Main and Sub Category",
        "example" : {
          "ProductSubCategory" : "ProductSubCategory",
          "ProductMainCategory" : "ProductMainCategory",
          "ProductGroups" : [ {
            "Name" : "Name"
          }, {
            "Name" : "Name"
          } ]
        },
        "properties" : {
          "ProductMainCategory" : {
            "description" : "Name of Main Category (Level 1) of the Product Groups",
            "maxLength" : 100,
            "type" : "string"
          },
          "ProductSubCategory" : {
            "description" : "Name of Sub Category (Level 2) of the Product Groups",
            "maxLength" : 100,
            "type" : "string"
          },
          "ProductGroups" : {
            "description" : "Product Groups contained in this Main and Sub Category",
            "items" : {
              "$ref" : "#/components/schemas/ProductGroup"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ProductGroup" : {
        "description" : "Information about a single Product Group (Level 3)",
        "example" : {
          "Name" : "Name"
        },
        "properties" : {
          "Name" : {
            "description" : "Name of the Product Group (Level 3)",
            "maxLength" : 100,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProductCategoriesAllLinkVisibilityResult" : {
        "description" : "List of items for which 'Show all' link is disabled",
        "example" : {
          "Items" : [ {
            "ProductSubCategory" : "ProductSubCategory",
            "ProductMainCategory" : "ProductMainCategory"
          }, {
            "ProductSubCategory" : "ProductSubCategory",
            "ProductMainCategory" : "ProductMainCategory"
          } ]
        },
        "properties" : {
          "Items" : {
            "description" : "Prototypes of Product Categories for which 'Show all' link is disabled",
            "items" : {
              "$ref" : "#/components/schemas/ProductCategoriesAllLinkVisibility"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ProductCategoriesAllLinkVisibility" : {
        "example" : {
          "ProductSubCategory" : "ProductSubCategory",
          "ProductMainCategory" : "ProductMainCategory"
        },
        "properties" : {
          "ProductMainCategory" : {
            "description" : "Product of main Category",
            "type" : "string"
          },
          "ProductSubCategory" : {
            "description" : "Product of sub Category",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProductServicesResult" : {
        "description" : "Services (Level 5) associated with given VertragId, Rufnummer and AonKundennummerId",
        "example" : {
          "ProductServices" : [ "ProductServices", "ProductServices" ]
        },
        "properties" : {
          "ProductServices" : {
            "description" : "Services of the VertragId, Rufnummer and AonKundennummerId",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "ProductsByGroupResult" : {
        "description" : "Product Details for a single Product Group (Level 3)",
        "example" : {
          "ProductGroup" : {
            "Name" : "Name"
          },
          "TotalCount" : 1,
          "MaxResultCount" : 0,
          "ProductDetails" : [ {
            "ProductGroup" : "ProductGroup",
            "ProductName" : "ProductName",
            "LocationZipCode" : "LocationZipCode",
            "DetailType" : "DetailType",
            "LocationCountry" : "LocationCountry",
            "MplsProfile" : "MplsProfile",
            "NmsPerformanceReport" : "NmsPerformanceReport",
            "LocationLatitude" : 6.027456183070403,
            "BranchNumber" : "BranchNumber",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "NmsCustomerAccess" : "NmsCustomerAccess",
            "LocationStreet" : "LocationStreet",
            "AonCustomerNumber" : "AonCustomerNumber",
            "Rufnummer" : "Rufnummer",
            "UploadBandwidth" : "UploadBandwidth",
            "NmsTrafficReport" : "NmsTrafficReport",
            "VertragId" : "VertragId",
            "MplsVpnId" : "MplsVpnId",
            "LocationState" : "LocationState",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "CustomerNetwork" : "CustomerNetwork",
            "RedundancyType" : "RedundancyType",
            "LocationId" : 0,
            "LocationCity" : "LocationCity",
            "ProductNumber" : "ProductNumber",
            "MplsVpnName" : "MplsVpnName",
            "ProductSubCategory" : "ProductSubCategory",
            "NmsSlaCode" : "NmsSlaCode",
            "NmsProactive" : "NmsProactive",
            "ProductMainCategory" : "ProductMainCategory",
            "LocationLongitude" : 1.4658129805029452,
            "DownloadBandwidth" : "DownloadBandwidth",
            "CpeHostname" : "CpeHostname",
            "CpeLoopbackIp" : "CpeLoopbackIp"
          }, {
            "ProductGroup" : "ProductGroup",
            "ProductName" : "ProductName",
            "LocationZipCode" : "LocationZipCode",
            "DetailType" : "DetailType",
            "LocationCountry" : "LocationCountry",
            "MplsProfile" : "MplsProfile",
            "NmsPerformanceReport" : "NmsPerformanceReport",
            "LocationLatitude" : 6.027456183070403,
            "BranchNumber" : "BranchNumber",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "NmsCustomerAccess" : "NmsCustomerAccess",
            "LocationStreet" : "LocationStreet",
            "AonCustomerNumber" : "AonCustomerNumber",
            "Rufnummer" : "Rufnummer",
            "UploadBandwidth" : "UploadBandwidth",
            "NmsTrafficReport" : "NmsTrafficReport",
            "VertragId" : "VertragId",
            "MplsVpnId" : "MplsVpnId",
            "LocationState" : "LocationState",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "CustomerNetwork" : "CustomerNetwork",
            "RedundancyType" : "RedundancyType",
            "LocationId" : 0,
            "LocationCity" : "LocationCity",
            "ProductNumber" : "ProductNumber",
            "MplsVpnName" : "MplsVpnName",
            "ProductSubCategory" : "ProductSubCategory",
            "NmsSlaCode" : "NmsSlaCode",
            "NmsProactive" : "NmsProactive",
            "ProductMainCategory" : "ProductMainCategory",
            "LocationLongitude" : 1.4658129805029452,
            "DownloadBandwidth" : "DownloadBandwidth",
            "CpeHostname" : "CpeHostname",
            "CpeLoopbackIp" : "CpeLoopbackIp"
          } ],
          "SkipCount" : 6,
          "Sorting" : "Sorting"
        },
        "properties" : {
          "ProductGroup" : {
            "$ref" : "#/components/schemas/ProductGroup"
          },
          "ProductDetails" : {
            "description" : "Details of the Products of the customer contained in this Product Group",
            "items" : {
              "$ref" : "#/components/schemas/ProductDetail"
            },
            "type" : "array"
          },
          "MaxResultCount" : {
            "description" : "Maximum number of results that should have been returned (by paging).",
            "nullable" : true,
            "type" : "integer"
          },
          "SkipCount" : {
            "description" : "Number of results that should have been skipped (by paging).",
            "nullable" : true,
            "type" : "integer"
          },
          "Sorting" : {
            "description" : "Sorting information that has been applied to the result set.",
            "type" : "string"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ProductsBySubCategoryResult" : {
        "description" : "Product Details for a single Product SubCategory (Level 2)",
        "example" : {
          "TotalCount" : 0,
          "ProductDetails" : [ {
            "ProductGroup" : "ProductGroup",
            "ProductName" : "ProductName",
            "LocationZipCode" : "LocationZipCode",
            "DetailType" : "DetailType",
            "LocationCountry" : "LocationCountry",
            "MplsProfile" : "MplsProfile",
            "NmsPerformanceReport" : "NmsPerformanceReport",
            "LocationLatitude" : 6.027456183070403,
            "BranchNumber" : "BranchNumber",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "NmsCustomerAccess" : "NmsCustomerAccess",
            "LocationStreet" : "LocationStreet",
            "AonCustomerNumber" : "AonCustomerNumber",
            "Rufnummer" : "Rufnummer",
            "UploadBandwidth" : "UploadBandwidth",
            "NmsTrafficReport" : "NmsTrafficReport",
            "VertragId" : "VertragId",
            "MplsVpnId" : "MplsVpnId",
            "LocationState" : "LocationState",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "CustomerNetwork" : "CustomerNetwork",
            "RedundancyType" : "RedundancyType",
            "LocationId" : 0,
            "LocationCity" : "LocationCity",
            "ProductNumber" : "ProductNumber",
            "MplsVpnName" : "MplsVpnName",
            "ProductSubCategory" : "ProductSubCategory",
            "NmsSlaCode" : "NmsSlaCode",
            "NmsProactive" : "NmsProactive",
            "ProductMainCategory" : "ProductMainCategory",
            "LocationLongitude" : 1.4658129805029452,
            "DownloadBandwidth" : "DownloadBandwidth",
            "CpeHostname" : "CpeHostname",
            "CpeLoopbackIp" : "CpeLoopbackIp"
          }, {
            "ProductGroup" : "ProductGroup",
            "ProductName" : "ProductName",
            "LocationZipCode" : "LocationZipCode",
            "DetailType" : "DetailType",
            "LocationCountry" : "LocationCountry",
            "MplsProfile" : "MplsProfile",
            "NmsPerformanceReport" : "NmsPerformanceReport",
            "LocationLatitude" : 6.027456183070403,
            "BranchNumber" : "BranchNumber",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "NmsCustomerAccess" : "NmsCustomerAccess",
            "LocationStreet" : "LocationStreet",
            "AonCustomerNumber" : "AonCustomerNumber",
            "Rufnummer" : "Rufnummer",
            "UploadBandwidth" : "UploadBandwidth",
            "NmsTrafficReport" : "NmsTrafficReport",
            "VertragId" : "VertragId",
            "MplsVpnId" : "MplsVpnId",
            "LocationState" : "LocationState",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "CustomerNetwork" : "CustomerNetwork",
            "RedundancyType" : "RedundancyType",
            "LocationId" : 0,
            "LocationCity" : "LocationCity",
            "ProductNumber" : "ProductNumber",
            "MplsVpnName" : "MplsVpnName",
            "ProductSubCategory" : "ProductSubCategory",
            "NmsSlaCode" : "NmsSlaCode",
            "NmsProactive" : "NmsProactive",
            "ProductMainCategory" : "ProductMainCategory",
            "LocationLongitude" : 1.4658129805029452,
            "DownloadBandwidth" : "DownloadBandwidth",
            "CpeHostname" : "CpeHostname",
            "CpeLoopbackIp" : "CpeLoopbackIp"
          } ]
        },
        "properties" : {
          "ProductDetails" : {
            "description" : "Details of the Products",
            "items" : {
              "$ref" : "#/components/schemas/ProductDetail"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "GroupCount" : {
        "description" : "Object which describes the count of available entries for a Product group (level 1)",
        "example" : {
          "GroupName" : "GroupName",
          "Count" : 0
        },
        "properties" : {
          "GroupName" : {
            "description" : "The key of the group",
            "type" : "string"
          },
          "Count" : {
            "description" : "The number of  entries for this group",
            "format" : "int64",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ProductDetail" : {
        "description" : "Details for a single Product of a customer",
        "example" : {
          "ProductGroup" : "ProductGroup",
          "ProductName" : "ProductName",
          "LocationZipCode" : "LocationZipCode",
          "DetailType" : "DetailType",
          "LocationCountry" : "LocationCountry",
          "MplsProfile" : "MplsProfile",
          "NmsPerformanceReport" : "NmsPerformanceReport",
          "LocationLatitude" : 6.027456183070403,
          "BranchNumber" : "BranchNumber",
          "Kums" : "Kums",
          "LocationDescription" : "LocationDescription",
          "NmsCustomerAccess" : "NmsCustomerAccess",
          "LocationStreet" : "LocationStreet",
          "AonCustomerNumber" : "AonCustomerNumber",
          "Rufnummer" : "Rufnummer",
          "UploadBandwidth" : "UploadBandwidth",
          "NmsTrafficReport" : "NmsTrafficReport",
          "VertragId" : "VertragId",
          "MplsVpnId" : "MplsVpnId",
          "LocationState" : "LocationState",
          "CallNumber" : {
            "CC" : "CC",
            "SN" : "SN",
            "NDC" : "NDC"
          },
          "CustomerNetwork" : "CustomerNetwork",
          "RedundancyType" : "RedundancyType",
          "LocationId" : 0,
          "LocationCity" : "LocationCity",
          "ProductNumber" : "ProductNumber",
          "MplsVpnName" : "MplsVpnName",
          "ProductSubCategory" : "ProductSubCategory",
          "NmsSlaCode" : "NmsSlaCode",
          "NmsProactive" : "NmsProactive",
          "ProductMainCategory" : "ProductMainCategory",
          "LocationLongitude" : 1.4658129805029452,
          "DownloadBandwidth" : "DownloadBandwidth",
          "CpeHostname" : "CpeHostname",
          "CpeLoopbackIp" : "CpeLoopbackIp"
        },
        "properties" : {
          "LocationId" : {
            "description" : "The location id was was used to defer zip code and the other location properties",
            "format" : "int64",
            "nullable" : true,
            "type" : "integer"
          },
          "LocationDescription" : {
            "description" : "Customer Location Description",
            "type" : "string"
          },
          "LocationCountry" : {
            "description" : "Name of the Country of the Customer Location",
            "type" : "string"
          },
          "LocationState" : {
            "description" : "State of the Customer Location",
            "type" : "string"
          },
          "LocationZipCode" : {
            "description" : "ZIP Code of the Customer Location",
            "type" : "string"
          },
          "LocationCity" : {
            "description" : "Name of the City of the Customer Location",
            "type" : "string"
          },
          "LocationStreet" : {
            "description" : "Name and Number of the Street of the Customer Location",
            "type" : "string"
          },
          "LocationLatitude" : {
            "description" : "The location latitude.",
            "format" : "double",
            "nullable" : true,
            "type" : "number"
          },
          "LocationLongitude" : {
            "description" : "The location longitude.",
            "format" : "double",
            "nullable" : true,
            "type" : "number"
          },
          "ProductGroup" : {
            "description" : "Name of the Product Group (Level 3)",
            "type" : "string"
          },
          "ProductName" : {
            "description" : "Name of the Product (Level 4) (not unique to the customer)",
            "type" : "string"
          },
          "ProductMainCategory" : {
            "description" : "Product of main Category",
            "type" : "string"
          },
          "ProductSubCategory" : {
            "description" : "Product of sub Category",
            "type" : "string"
          },
          "ProductNumber" : {
            "description" : "Phone Number (Rufnummer / AonCustomerNumber) of the Product",
            "type" : "string"
          },
          "DetailType" : {
            "description" : "The type of detail page that should be displayed (e.g. MPLS details)",
            "type" : "string"
          },
          "Rufnummer" : {
            "description" : "The Phone Number (Rufnummer) of the product",
            "type" : "string"
          },
          "AonCustomerNumber" : {
            "description" : "The aon customernumber of the product",
            "type" : "string"
          },
          "VertragId" : {
            "description" : "The contract number of the product",
            "type" : "string"
          },
          "Kums" : {
            "description" : "The customer ID.",
            "type" : "string"
          },
          "CallNumber" : {
            "$ref" : "#/components/schemas/CallNumber"
          },
          "DownloadBandwidth" : {
            "description" : "Current Download bandwidth",
            "type" : "string"
          },
          "UploadBandwidth" : {
            "description" : "Current Upload bandwidth",
            "type" : "string"
          },
          "BranchNumber" : {
            "description" : "Branch Number",
            "type" : "string"
          },
          "CpeLoopbackIp" : {
            "description" : "CPE Loopback-IP",
            "type" : "string"
          },
          "CpeHostname" : {
            "description" : "CPE Hostname",
            "type" : "string"
          },
          "CustomerNetwork" : {
            "description" : "Customer Network",
            "type" : "string"
          },
          "RedundancyType" : {
            "description" : "Redundancy Type",
            "type" : "string"
          },
          "NmsProactive" : {
            "description" : "NMS",
            "type" : "string"
          },
          "NmsPerformanceReport" : {
            "description" : "Performance Report",
            "type" : "string"
          },
          "NmsTrafficReport" : {
            "description" : "Traffic Report",
            "type" : "string"
          },
          "NmsCustomerAccess" : {
            "description" : "Customer Access",
            "type" : "string"
          },
          "MplsVpnName" : {
            "description" : "VPN Name",
            "type" : "string"
          },
          "MplsVpnId" : {
            "description" : "VPN ID",
            "type" : "string"
          },
          "MplsProfile" : {
            "description" : "Profile",
            "type" : "string"
          },
          "NmsSlaCode" : {
            "description" : "SLA Code",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "NumberingServiceProductDetailsResult" : {
        "description" : "Mobile Product Details",
        "example" : {
          "TotalCount" : 0,
          "ProductDetails" : [ {
            "Kundenname" : "Kundenname",
            "Kums" : "Kums",
            "ProductName" : "ProductName",
            "TechPlzOrt" : "TechPlzOrt",
            "Rufnummer" : "Rufnummer",
            "Segment" : "Segment",
            "TechStrasse" : "TechStrasse"
          }, {
            "Kundenname" : "Kundenname",
            "Kums" : "Kums",
            "ProductName" : "ProductName",
            "TechPlzOrt" : "TechPlzOrt",
            "Rufnummer" : "Rufnummer",
            "Segment" : "Segment",
            "TechStrasse" : "TechStrasse"
          } ]
        },
        "properties" : {
          "ProductDetails" : {
            "description" : "Details of the Products of the customer contained in this Product Group",
            "items" : {
              "$ref" : "#/components/schemas/NumberingServiceProductDetail"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "NumberingServiceProductDetail" : {
        "description" : "Details for a single numbering service",
        "example" : {
          "Kundenname" : "Kundenname",
          "Kums" : "Kums",
          "ProductName" : "ProductName",
          "TechPlzOrt" : "TechPlzOrt",
          "Rufnummer" : "Rufnummer",
          "Segment" : "Segment",
          "TechStrasse" : "TechStrasse"
        },
        "properties" : {
          "Kums" : {
            "description" : "The customer ID.",
            "type" : "string"
          },
          "ProductName" : {
            "description" : "Name of the Product (Level 4) (not unique to the customer)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Rufnummer" : {
            "description" : "The Phone Number (Rufnummer) of the product",
            "maxLength" : 100,
            "type" : "string"
          },
          "Kundenname" : {
            "description" : "Name of customer",
            "type" : "string"
          },
          "Segment" : {
            "description" : "Segment",
            "type" : "string"
          },
          "TechStrasse" : {
            "description" : "TechStrasse",
            "type" : "string"
          },
          "TechPlzOrt" : {
            "description" : "TechPlzOrt",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "LicenseProductDetailsResult" : {
        "description" : "License Product Details",
        "example" : {
          "TotalCount" : 6,
          "ProductDetails" : [ {
            "SkuNumber" : "SkuNumber",
            "Kums" : "Kums",
            "ValidTo" : "2000-01-23T04:56:07.000+00:00",
            "License" : "License",
            "Quantity" : 0,
            "ValidFrom" : "2000-01-23T04:56:07.000+00:00",
            "ReportMonth" : "ReportMonth",
            "Vendor" : "Vendor",
            "LicenseAgreementType" : "LicenseAgreementType",
            "ContractShortName" : "ContractShortName"
          }, {
            "SkuNumber" : "SkuNumber",
            "Kums" : "Kums",
            "ValidTo" : "2000-01-23T04:56:07.000+00:00",
            "License" : "License",
            "Quantity" : 0,
            "ValidFrom" : "2000-01-23T04:56:07.000+00:00",
            "ReportMonth" : "ReportMonth",
            "Vendor" : "Vendor",
            "LicenseAgreementType" : "LicenseAgreementType",
            "ContractShortName" : "ContractShortName"
          } ]
        },
        "properties" : {
          "ProductDetails" : {
            "description" : "list of the license Products of the customer",
            "items" : {
              "$ref" : "#/components/schemas/LicenseProductDetail"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "LicenseProductDetail" : {
        "description" : "Details for a single license",
        "example" : {
          "SkuNumber" : "SkuNumber",
          "Kums" : "Kums",
          "ValidTo" : "2000-01-23T04:56:07.000+00:00",
          "License" : "License",
          "Quantity" : 0,
          "ValidFrom" : "2000-01-23T04:56:07.000+00:00",
          "ReportMonth" : "ReportMonth",
          "Vendor" : "Vendor",
          "LicenseAgreementType" : "LicenseAgreementType",
          "ContractShortName" : "ContractShortName"
        },
        "properties" : {
          "Kums" : {
            "description" : "The customer ID.",
            "type" : "string"
          },
          "License" : {
            "description" : "Name of license",
            "type" : "string"
          },
          "LicenseAgreementType" : {
            "description" : "Name of license agreement type",
            "type" : "string"
          },
          "ContractShortName" : {
            "description" : "Name of contract",
            "type" : "string"
          },
          "SkuNumber" : {
            "description" : "Value of part_number in index",
            "type" : "string"
          },
          "ReportMonth" : {
            "description" : "Value of report_month in index",
            "type" : "string"
          },
          "Vendor" : {
            "description" : "Name of vendor",
            "type" : "string"
          },
          "Quantity" : {
            "description" : "quantity",
            "nullable" : true,
            "type" : "integer"
          },
          "ValidFrom" : {
            "description" : "start date for license",
            "format" : "date-time",
            "nullable" : true,
            "type" : "string"
          },
          "ValidTo" : {
            "description" : "end date for license",
            "format" : "date-time",
            "nullable" : true,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MPLSDetails" : {
        "description" : "Details for a single MPLS product",
        "example" : {
          "VpnDetails" : [ {
            "CeVlanId" : "CeVlanId",
            "Redundancy" : "Redundancy",
            "VpnName" : "VpnName",
            "Bandwidth" : "Bandwidth",
            "NotificationMailaddress" : "NotificationMailaddress",
            "LanNet" : "LanNet",
            "VpnId" : "VpnId"
          }, {
            "CeVlanId" : "CeVlanId",
            "Redundancy" : "Redundancy",
            "VpnName" : "VpnName",
            "Bandwidth" : "Bandwidth",
            "NotificationMailaddress" : "NotificationMailaddress",
            "LanNet" : "LanNet",
            "VpnId" : "VpnId"
          } ],
          "Address" : "Address",
          "LkmsBundesland" : "LkmsBundesland",
          "Filialnummer" : "Filialnummer",
          "LocationId" : 0,
          "PhysAnschlussnummer" : "PhysAnschlussnummer",
          "BillingNumber" : "BillingNumber",
          "Contact" : "Contact",
          "AccessBandwidth" : "AccessBandwidth",
          "Linenumber" : "Linenumber",
          "KumsId" : "KumsId",
          "CeLoopbackIp" : "CeLoopbackIp",
          "SLACode" : "SLACode",
          "EnrichedMdcProduct" : "EnrichedMdcProduct"
        },
        "properties" : {
          "Filialnummer" : {
            "description" : "Kundenspezifische Standortbezeichnung (FILIALNUMMER)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Address" : {
            "description" : "Address (ADDRESS)",
            "maxLength" : 100,
            "type" : "string"
          },
          "LkmsBundesland" : {
            "description" : "Bundesland (Lkms_Bundesland)",
            "maxLength" : 100,
            "type" : "string"
          },
          "AccessBandwidth" : {
            "description" : "Access Bandwidth (ACCESS_BANDWITH)",
            "maxLength" : 100,
            "type" : "string"
          },
          "SLACode" : {
            "description" : "SLA (SLA_CODE)",
            "maxLength" : 100,
            "type" : "string"
          },
          "EnrichedMdcProduct" : {
            "description" : "NMS (Enriched_mdc_produkt)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Contact" : {
            "description" : "Contact (CONTACT)",
            "maxLength" : 100,
            "type" : "string"
          },
          "CeLoopbackIp" : {
            "description" : "Loopback IP (CE_LOOPBACK_IP)",
            "maxLength" : 100,
            "type" : "string"
          },
          "PhysAnschlussnummer" : {
            "description" : "Physikalische Anschlussnummer (PHYS_ANSCHLUSSNUMMER)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Linenumber" : {
            "description" : "Leitungsbezeichnung (LINENUMBER)",
            "maxLength" : 100,
            "type" : "string"
          },
          "BillingNumber" : {
            "description" : "Verrechnungsnummer (EOL_VERRECHNUNGSNUMMER)",
            "maxLength" : 100,
            "type" : "string"
          },
          "LocationId" : {
            "description" : "The location ID.",
            "nullable" : true,
            "type" : "integer"
          },
          "KumsId" : {
            "description" : "Customer number.",
            "type" : "string"
          },
          "VpnDetails" : {
            "description" : "Details of all VPNs associated with this MPLS product",
            "items" : {
              "$ref" : "#/components/schemas/VpnDetail"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "VpnDetail" : {
        "description" : "VPN Details for a single VPN associated with a MPLS Product",
        "example" : {
          "CeVlanId" : "CeVlanId",
          "Redundancy" : "Redundancy",
          "VpnName" : "VpnName",
          "Bandwidth" : "Bandwidth",
          "NotificationMailaddress" : "NotificationMailaddress",
          "LanNet" : "LanNet",
          "VpnId" : "VpnId"
        },
        "properties" : {
          "VpnName" : {
            "description" : "VPN Name (VPN_Name)",
            "maxLength" : 100,
            "type" : "string"
          },
          "VpnId" : {
            "description" : "VPN ID (VPN_ID)",
            "maxLength" : 100,
            "type" : "string"
          },
          "CeVlanId" : {
            "description" : "CE VLAN ID (CE_VLAN_ID)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Bandwidth" : {
            "description" : "Bandwidth (BANDWIDTH)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Redundancy" : {
            "description" : "Redundancy (REDUNDANCY)",
            "maxLength" : 100,
            "type" : "string"
          },
          "NotificationMailaddress" : {
            "description" : "NotificationMailaddress (NOTIFICATION_MAILADDRESS)",
            "maxLength" : 100,
            "type" : "string"
          },
          "LanNet" : {
            "description" : "LanNet (LAN_NET)",
            "maxLength" : 100,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "MobileProductDetailsResult" : {
        "description" : "Mobile Product Details",
        "example" : {
          "TotalCount" : 0,
          "MobileProductDetails" : [ {
            "ProductGroup" : "ProductGroup",
            "Kums" : "Kums",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "FirstName" : "FirstName",
            "Sim" : "Sim",
            "Rate" : "Rate",
            "LastName" : "LastName",
            "SubscriberNumber" : "SubscriberNumber",
            "Ban" : "Ban"
          }, {
            "ProductGroup" : "ProductGroup",
            "Kums" : "Kums",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "FirstName" : "FirstName",
            "Sim" : "Sim",
            "Rate" : "Rate",
            "LastName" : "LastName",
            "SubscriberNumber" : "SubscriberNumber",
            "Ban" : "Ban"
          } ]
        },
        "properties" : {
          "MobileProductDetails" : {
            "description" : "Details of the Products of the customer contained in this Product Group",
            "items" : {
              "$ref" : "#/components/schemas/MobileProductDetails"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "MobileProductDetails" : {
        "description" : "Details for a Mobile product",
        "example" : {
          "ProductGroup" : "ProductGroup",
          "Kums" : "Kums",
          "CallNumber" : {
            "CC" : "CC",
            "SN" : "SN",
            "NDC" : "NDC"
          },
          "FirstName" : "FirstName",
          "Sim" : "Sim",
          "Rate" : "Rate",
          "LastName" : "LastName",
          "SubscriberNumber" : "SubscriberNumber",
          "Ban" : "Ban"
        },
        "properties" : {
          "LastName" : {
            "description" : "Last name (Nachname) of Customer",
            "maxLength" : 100,
            "type" : "string"
          },
          "FirstName" : {
            "description" : "First name (Vorname) of Customer",
            "maxLength" : 100,
            "type" : "string"
          },
          "SubscriberNumber" : {
            "description" : "Phone number (Rufnummer)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Ban" : {
            "description" : "Billing Account Number of Customer",
            "maxLength" : 100,
            "type" : "string"
          },
          "Sim" : {
            "description" : "SIM Card Number of Customer",
            "maxLength" : 100,
            "type" : "string"
          },
          "Rate" : {
            "description" : "Tariff",
            "maxLength" : 100,
            "type" : "string"
          },
          "Kums" : {
            "description" : "The customer ID.",
            "type" : "string"
          },
          "ProductGroup" : {
            "description" : "Name of the Product Group (Level 3)",
            "type" : "string"
          },
          "CallNumber" : {
            "$ref" : "#/components/schemas/CallNumber"
          }
        },
        "type" : "object"
      },
      "ProblemDetails" : {
        "description" : "Problem Details for APIs class https://tools.ietf.org/html/rfc7807",
        "properties" : {
          "Type" : {
            "description" : "A URI reference [RFC3986] that identifies the problem type",
            "type" : "string"
          },
          "Title" : {
            "description" : "A short, human-readable summary of the problem type",
            "type" : "string"
          },
          "Status" : {
            "description" : "The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
            "type" : "string"
          },
          "Detail" : {
            "description" : "A human-readable explanation specific to this occurrence of the problem.",
            "type" : "string"
          },
          "Instance" : {
            "description" : "The HTTP status code([RFC7231], Section 6) generated by the origin server for this occurrence of the problem.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "HasHcsProductResult" : {
        "example" : {
          "HasProduct" : true
        },
        "properties" : {
          "HasProduct" : {
            "description" : "The kums has a HCS product",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "GetGrantedKumsForMonitoringProductResult" : {
        "example" : {
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The customer KUMS numbers which have monitoring product",
            "items" : {
              "minLength" : 1,
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetGrantedKumsForDataCenterResult" : {
        "example" : {
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The customer KUMS numbers which have managed DataCenter",
            "items" : {
              "minLength" : 1,
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetMarketplaceProductDetailsResult" : {
        "example" : {
          "Items" : [ {
            "CustomerNumber" : "CustomerNumber",
            "CustomerBillingAccounts" : [ {
              "TelephoneNumber" : "TelephoneNumber",
              "Ban" : "Ban"
            }, {
              "TelephoneNumber" : "TelephoneNumber",
              "Ban" : "Ban"
            } ]
          }, {
            "CustomerNumber" : "CustomerNumber",
            "CustomerBillingAccounts" : [ {
              "TelephoneNumber" : "TelephoneNumber",
              "Ban" : "Ban"
            }, {
              "TelephoneNumber" : "TelephoneNumber",
              "Ban" : "Ban"
            } ]
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/MarketplaceProductDetails"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "MarketplaceProductDetails" : {
        "example" : {
          "CustomerNumber" : "CustomerNumber",
          "CustomerBillingAccounts" : [ {
            "TelephoneNumber" : "TelephoneNumber",
            "Ban" : "Ban"
          }, {
            "TelephoneNumber" : "TelephoneNumber",
            "Ban" : "Ban"
          } ]
        },
        "properties" : {
          "CustomerNumber" : {
            "description" : "The customer ID (Kums).",
            "type" : "string"
          },
          "CustomerBillingAccounts" : {
            "items" : {
              "$ref" : "#/components/schemas/CustomerBillingAccount"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "CustomerBillingAccount" : {
        "example" : {
          "TelephoneNumber" : "TelephoneNumber",
          "Ban" : "Ban"
        },
        "properties" : {
          "Ban" : {
            "description" : "Billing Account Number of Customer.",
            "type" : "string"
          },
          "TelephoneNumber" : {
            "description" : "Phone number (Rufnummer).",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetCustomerMarketplaceSubscriptionsResult" : {
        "example" : {
          "Items" : [ {
            "StartDate" : "2000-01-23T04:56:07.000+00:00",
            "Status" : "Status",
            "ExpirationDate" : "2000-01-23T04:56:07.000+00:00",
            "ServiceStatus" : "ServiceStatus",
            "Period" : "Period",
            "Name" : "Name"
          }, {
            "StartDate" : "2000-01-23T04:56:07.000+00:00",
            "Status" : "Status",
            "ExpirationDate" : "2000-01-23T04:56:07.000+00:00",
            "ServiceStatus" : "ServiceStatus",
            "Period" : "Period",
            "Name" : "Name"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/MarketplaceProductSubscription"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "MarketplaceProductSubscription" : {
        "example" : {
          "StartDate" : "2000-01-23T04:56:07.000+00:00",
          "Status" : "Status",
          "ExpirationDate" : "2000-01-23T04:56:07.000+00:00",
          "ServiceStatus" : "ServiceStatus",
          "Period" : "Period",
          "Name" : "Name"
        },
        "properties" : {
          "Name" : {
            "description" : "Service name.",
            "type" : "string"
          },
          "StartDate" : {
            "description" : "The start date of subscription.",
            "format" : "date-time",
            "type" : "string"
          },
          "ExpirationDate" : {
            "description" : "The end date of subscription.",
            "format" : "date-time",
            "type" : "string"
          },
          "Status" : {
            "description" : "Status.",
            "type" : "string"
          },
          "ServiceStatus" : {
            "description" : "Service status.",
            "type" : "string"
          },
          "Period" : {
            "description" : "Service status.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProductsWithLocationsResult" : {
        "example" : {
          "TotalCount" : 0,
          "Items" : [ null, null ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductWithLocation"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ProductWithLocation" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ProductsWithCategory"
        }, {
          "$ref" : "#/components/schemas/Location"
        } ],
        "description" : "Describes the product with its categories and location"
      },
      "CallNumber" : {
        "example" : {
          "CC" : "CC",
          "SN" : "SN",
          "NDC" : "NDC"
        },
        "properties" : {
          "CC" : {
            "description" : "The first part of the telephone number is the country code (one to three digits)",
            "maxLength" : 3,
            "type" : "string"
          },
          "NDC" : {
            "description" : "The national destination code (1 to 14 digits)",
            "maxLength" : 14,
            "type" : "string"
          },
          "SN" : {
            "description" : "The subscriber number (1 to 14 digits)",
            "maxLength" : 14,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProductsForSubscriptionResult" : {
        "description" : "Subscription with products for a single Subscription (Level 4)",
        "example" : {
          "ProductSubscription" : {
            "AddressLine2" : "AddressLine2",
            "AddressLine1" : "AddressLine1",
            "PhoneNumber" : "PhoneNumber",
            "SubscriptionProductDetails" : [ {
              "ProductDetailCharacteristics" : [ {
                "Value" : "Value",
                "Name" : "Name"
              }, {
                "Value" : "Value",
                "Name" : "Name"
              } ],
              "ProductOfferingId" : "ProductOfferingId",
              "PhoneNumber" : "PhoneNumber",
              "LevelInTree" : 0,
              "Name" : "Name"
            }, {
              "ProductDetailCharacteristics" : [ {
                "Value" : "Value",
                "Name" : "Name"
              }, {
                "Value" : "Value",
                "Name" : "Name"
              } ],
              "ProductOfferingId" : "ProductOfferingId",
              "PhoneNumber" : "PhoneNumber",
              "LevelInTree" : 0,
              "Name" : "Name"
            } ],
            "AccountNumber" : "AccountNumber"
          }
        },
        "properties" : {
          "ProductSubscription" : {
            "$ref" : "#/components/schemas/ProductSubscription"
          }
        },
        "type" : "object"
      },
      "ProductSubscription" : {
        "description" : "Product subscription (Level 4)",
        "example" : {
          "AddressLine2" : "AddressLine2",
          "AddressLine1" : "AddressLine1",
          "PhoneNumber" : "PhoneNumber",
          "SubscriptionProductDetails" : [ {
            "ProductDetailCharacteristics" : [ {
              "Value" : "Value",
              "Name" : "Name"
            }, {
              "Value" : "Value",
              "Name" : "Name"
            } ],
            "ProductOfferingId" : "ProductOfferingId",
            "PhoneNumber" : "PhoneNumber",
            "LevelInTree" : 0,
            "Name" : "Name"
          }, {
            "ProductDetailCharacteristics" : [ {
              "Value" : "Value",
              "Name" : "Name"
            }, {
              "Value" : "Value",
              "Name" : "Name"
            } ],
            "ProductOfferingId" : "ProductOfferingId",
            "PhoneNumber" : "PhoneNumber",
            "LevelInTree" : 0,
            "Name" : "Name"
          } ],
          "AccountNumber" : "AccountNumber"
        },
        "properties" : {
          "PhoneNumber" : {
            "description" : "use for Rufnummer",
            "type" : "string"
          },
          "AccountNumber" : {
            "description" : "use for Verrechnungsnummer",
            "type" : "string"
          },
          "AddressLine1" : {
            "description" : "formatted address with Line1 in Adresse",
            "type" : "string"
          },
          "AddressLine2" : {
            "description" : "formatted address with Line2 in Adresse",
            "type" : "string"
          },
          "SubscriptionProductDetails" : {
            "items" : {
              "$ref" : "#/components/schemas/SubscriptionProductDetail"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "SubscriptionProductDetail" : {
        "description" : "Product in subscription",
        "example" : {
          "ProductDetailCharacteristics" : [ {
            "Value" : "Value",
            "Name" : "Name"
          }, {
            "Value" : "Value",
            "Name" : "Name"
          } ],
          "ProductOfferingId" : "ProductOfferingId",
          "PhoneNumber" : "PhoneNumber",
          "LevelInTree" : 0,
          "Name" : "Name"
        },
        "properties" : {
          "Name" : {
            "description" : "Product name",
            "type" : "string"
          },
          "PhoneNumber" : {
            "description" : "Phone number for product",
            "type" : "string"
          },
          "LevelInTree" : {
            "description" : "Product position in products tree",
            "type" : "integer"
          },
          "ProductDetailCharacteristics" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductDetailCharacteristic"
            },
            "type" : "array"
          },
          "ProductOfferingId" : {
            "description" : "Id of ProductOffering",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProductDetailCharacteristic" : {
        "description" : "Product detail characteristic",
        "example" : {
          "Value" : "Value",
          "Name" : "Name"
        },
        "properties" : {
          "Name" : {
            "description" : "name of characteristic",
            "type" : "string"
          },
          "Value" : {
            "description" : "value of characteristic",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AllProductsDocumentsResult" : {
        "example" : {
          "Items" : [ {
            "Items" : [ {
              "Description" : "Description",
              "LinkUrl" : "LinkUrl",
              "Headline" : "Headline",
              "Filename" : "Filename",
              "DocumentType" : "Pdf"
            }, {
              "Description" : "Description",
              "LinkUrl" : "LinkUrl",
              "Headline" : "Headline",
              "Filename" : "Filename",
              "DocumentType" : "Pdf"
            } ],
            "GroupId" : "GroupId"
          }, {
            "Items" : [ {
              "Description" : "Description",
              "LinkUrl" : "LinkUrl",
              "Headline" : "Headline",
              "Filename" : "Filename",
              "DocumentType" : "Pdf"
            }, {
              "Description" : "Description",
              "LinkUrl" : "LinkUrl",
              "Headline" : "Headline",
              "Filename" : "Filename",
              "DocumentType" : "Pdf"
            } ],
            "GroupId" : "GroupId"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductDocumentsResult"
            },
            "type" : "array",
            "uniqueItems" : true
          }
        }
      },
      "ProductDocumentsResult" : {
        "example" : {
          "Items" : [ {
            "Description" : "Description",
            "LinkUrl" : "LinkUrl",
            "Headline" : "Headline",
            "Filename" : "Filename",
            "DocumentType" : "Pdf"
          }, {
            "Description" : "Description",
            "LinkUrl" : "LinkUrl",
            "Headline" : "Headline",
            "Filename" : "Filename",
            "DocumentType" : "Pdf"
          } ],
          "GroupId" : "GroupId"
        },
        "properties" : {
          "GroupId" : {
            "type" : "string"
          },
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductDocument"
            },
            "type" : "array"
          }
        },
        "type" : "object",
        "uniqueItems" : true
      },
      "ProductDocument" : {
        "example" : {
          "Description" : "Description",
          "LinkUrl" : "LinkUrl",
          "Headline" : "Headline",
          "Filename" : "Filename",
          "DocumentType" : "Pdf"
        },
        "properties" : {
          "Headline" : {
            "description" : "Product document headline",
            "type" : "string"
          },
          "Filename" : {
            "description" : "Product document filename",
            "type" : "string"
          },
          "Description" : {
            "description" : "Product document description",
            "type" : "string"
          },
          "DocumentType" : {
            "enum" : [ "Pdf", "Word", "Xls", "Csv" ],
            "type" : "string"
          },
          "LinkUrl" : {
            "description" : "Product document url",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "Level3ProductsGroup" : {
        "example" : {
          "Level3Products" : [ "Level3Products", "Level3Products" ],
          "GroupId" : "GroupId"
        },
        "properties" : {
          "GroupId" : {
            "description" : "Unique Id for collection of Level3 products",
            "type" : "string"
          },
          "Level3Products" : {
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object",
        "uniqueItems" : true
      },
      "DataProductsResult" : {
        "example" : {
          "TotalCount" : 0,
          "DataProducts" : [ {
            "HomeNumberB" : "HomeNumberB",
            "HomeNumberA" : "HomeNumberA",
            "DateLineDeactivationPlanned" : "DateLineDeactivationPlanned",
            "LineStatus" : "LineStatus",
            "LocationInformationB" : "LocationInformationB",
            "LocationInformationA" : "LocationInformationA",
            "CustomerNumber" : "CustomerNumber",
            "DateLineDeactivationRealized" : "DateLineDeactivationRealized",
            "LocationA" : "LocationA",
            "LocationB" : "LocationB",
            "DateLineSetupRealized" : "DateLineSetupRealized",
            "PaymentObligationStartDate" : "PaymentObligationStartDate",
            "DistrictCommunityA" : "DistrictCommunityA",
            "DistrictCommunityB" : "DistrictCommunityB",
            "Color" : "Color",
            "ProductType" : "ProductType",
            "ServiceLevelAgreement" : "ServiceLevelAgreement",
            "PaymentObligationEndDate" : "PaymentObligationEndDate",
            "CommunityA" : "CommunityA",
            "ProductNumber" : "ProductNumber",
            "CommunityB" : "CommunityB",
            "DateLineSetupPlanned" : "DateLineSetupPlanned",
            "BlockB" : "BlockB",
            "BlockA" : "BlockA",
            "PostcodeA" : "PostcodeA",
            "PostcodeB" : "PostcodeB",
            "DoorA" : "DoorA",
            "StairwayB" : "StairwayB",
            "StairwayA" : "StairwayA",
            "DoorB" : "DoorB",
            "CommunityCodeB" : "CommunityCodeB",
            "ClassOfService" : "ClassOfService",
            "FloorA" : "FloorA",
            "LineNumber" : "LineNumber",
            "FloorB" : "FloorB",
            "CommunityCodeA" : "CommunityCodeA",
            "ServiceId" : "ServiceId",
            "PropertyNumberB" : "PropertyNumberB",
            "PropertyNumberA" : "PropertyNumberA",
            "CustomerName" : "CustomerName",
            "DistrictCommunityCodeA" : "DistrictCommunityCodeA",
            "DistrictCommunityCodeB" : "DistrictCommunityCodeB",
            "LineId" : "LineId",
            "LkmsIdA" : "LkmsIdA",
            "LkmsIdB" : "LkmsIdB",
            "AccountNumber" : "AccountNumber",
            "ProtectionMode" : "ProtectionMode",
            "CustomerOrderNumber" : "CustomerOrderNumber",
            "StreetB" : "StreetB",
            "StreetA" : "StreetA",
            "CityB" : "CityB",
            "CityA" : "CityA",
            "BandwidthWithuom" : "BandwidthWithuom"
          }, {
            "HomeNumberB" : "HomeNumberB",
            "HomeNumberA" : "HomeNumberA",
            "DateLineDeactivationPlanned" : "DateLineDeactivationPlanned",
            "LineStatus" : "LineStatus",
            "LocationInformationB" : "LocationInformationB",
            "LocationInformationA" : "LocationInformationA",
            "CustomerNumber" : "CustomerNumber",
            "DateLineDeactivationRealized" : "DateLineDeactivationRealized",
            "LocationA" : "LocationA",
            "LocationB" : "LocationB",
            "DateLineSetupRealized" : "DateLineSetupRealized",
            "PaymentObligationStartDate" : "PaymentObligationStartDate",
            "DistrictCommunityA" : "DistrictCommunityA",
            "DistrictCommunityB" : "DistrictCommunityB",
            "Color" : "Color",
            "ProductType" : "ProductType",
            "ServiceLevelAgreement" : "ServiceLevelAgreement",
            "PaymentObligationEndDate" : "PaymentObligationEndDate",
            "CommunityA" : "CommunityA",
            "ProductNumber" : "ProductNumber",
            "CommunityB" : "CommunityB",
            "DateLineSetupPlanned" : "DateLineSetupPlanned",
            "BlockB" : "BlockB",
            "BlockA" : "BlockA",
            "PostcodeA" : "PostcodeA",
            "PostcodeB" : "PostcodeB",
            "DoorA" : "DoorA",
            "StairwayB" : "StairwayB",
            "StairwayA" : "StairwayA",
            "DoorB" : "DoorB",
            "CommunityCodeB" : "CommunityCodeB",
            "ClassOfService" : "ClassOfService",
            "FloorA" : "FloorA",
            "LineNumber" : "LineNumber",
            "FloorB" : "FloorB",
            "CommunityCodeA" : "CommunityCodeA",
            "ServiceId" : "ServiceId",
            "PropertyNumberB" : "PropertyNumberB",
            "PropertyNumberA" : "PropertyNumberA",
            "CustomerName" : "CustomerName",
            "DistrictCommunityCodeA" : "DistrictCommunityCodeA",
            "DistrictCommunityCodeB" : "DistrictCommunityCodeB",
            "LineId" : "LineId",
            "LkmsIdA" : "LkmsIdA",
            "LkmsIdB" : "LkmsIdB",
            "AccountNumber" : "AccountNumber",
            "ProtectionMode" : "ProtectionMode",
            "CustomerOrderNumber" : "CustomerOrderNumber",
            "StreetB" : "StreetB",
            "StreetA" : "StreetA",
            "CityB" : "CityB",
            "CityA" : "CityA",
            "BandwidthWithuom" : "BandwidthWithuom"
          } ]
        },
        "properties" : {
          "DataProducts" : {
            "description" : "Array of DataProducts",
            "items" : {
              "$ref" : "#/components/schemas/DataProduct"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total count of items",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "DataProductsCountResult" : {
        "example" : {
          "TotalCount" : 0
        },
        "properties" : {
          "TotalCount" : {
            "description" : "Total count of items",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "DataProduct" : {
        "example" : {
          "HomeNumberB" : "HomeNumberB",
          "HomeNumberA" : "HomeNumberA",
          "DateLineDeactivationPlanned" : "DateLineDeactivationPlanned",
          "LineStatus" : "LineStatus",
          "LocationInformationB" : "LocationInformationB",
          "LocationInformationA" : "LocationInformationA",
          "CustomerNumber" : "CustomerNumber",
          "DateLineDeactivationRealized" : "DateLineDeactivationRealized",
          "LocationA" : "LocationA",
          "LocationB" : "LocationB",
          "DateLineSetupRealized" : "DateLineSetupRealized",
          "PaymentObligationStartDate" : "PaymentObligationStartDate",
          "DistrictCommunityA" : "DistrictCommunityA",
          "DistrictCommunityB" : "DistrictCommunityB",
          "Color" : "Color",
          "ProductType" : "ProductType",
          "ServiceLevelAgreement" : "ServiceLevelAgreement",
          "PaymentObligationEndDate" : "PaymentObligationEndDate",
          "CommunityA" : "CommunityA",
          "ProductNumber" : "ProductNumber",
          "CommunityB" : "CommunityB",
          "DateLineSetupPlanned" : "DateLineSetupPlanned",
          "BlockB" : "BlockB",
          "BlockA" : "BlockA",
          "PostcodeA" : "PostcodeA",
          "PostcodeB" : "PostcodeB",
          "DoorA" : "DoorA",
          "StairwayB" : "StairwayB",
          "StairwayA" : "StairwayA",
          "DoorB" : "DoorB",
          "CommunityCodeB" : "CommunityCodeB",
          "ClassOfService" : "ClassOfService",
          "FloorA" : "FloorA",
          "LineNumber" : "LineNumber",
          "FloorB" : "FloorB",
          "CommunityCodeA" : "CommunityCodeA",
          "ServiceId" : "ServiceId",
          "PropertyNumberB" : "PropertyNumberB",
          "PropertyNumberA" : "PropertyNumberA",
          "CustomerName" : "CustomerName",
          "DistrictCommunityCodeA" : "DistrictCommunityCodeA",
          "DistrictCommunityCodeB" : "DistrictCommunityCodeB",
          "LineId" : "LineId",
          "LkmsIdA" : "LkmsIdA",
          "LkmsIdB" : "LkmsIdB",
          "AccountNumber" : "AccountNumber",
          "ProtectionMode" : "ProtectionMode",
          "CustomerOrderNumber" : "CustomerOrderNumber",
          "StreetB" : "StreetB",
          "StreetA" : "StreetA",
          "CityB" : "CityB",
          "CityA" : "CityA",
          "BandwidthWithuom" : "BandwidthWithuom"
        },
        "properties" : {
          "CustomerNumber" : {
            "description" : "Customer Number (KumsId)",
            "type" : "string"
          },
          "CustomerName" : {
            "description" : "Name of customer",
            "type" : "string"
          },
          "ProductType" : {
            "description" : "Type of product",
            "type" : "string"
          },
          "ProductNumber" : {
            "description" : "Phone Number (Rufnummer / AonCustomerNumber) of the Product",
            "type" : "string"
          },
          "LineNumber" : {
            "description" : "Leitungsbezeichnung (LINENUMBER),  LineNumber combined from onkz, tn_num",
            "type" : "string"
          },
          "AccountNumber" : {
            "description" : "use for Verrechnungsnummer",
            "type" : "string"
          },
          "LineId" : {
            "description" : "LineId combined from a_knoten_1, a_knoten_2, obj_art, obj_name",
            "type" : "string"
          },
          "LkmsIdA" : {
            "description" : "Location Id first",
            "type" : "string"
          },
          "LkmsIdB" : {
            "description" : "Location Id second",
            "type" : "string"
          },
          "LocationB" : {
            "description" : "Second location combined from postal2_cd, city2_nam, street2_nam, block2_num, house2_num, staircase2_num, floor2_num, door2_num",
            "type" : "string"
          },
          "PostcodeB" : {
            "description" : "Postcode for location B",
            "type" : "string"
          },
          "CityB" : {
            "description" : "City for location B",
            "type" : "string"
          },
          "StreetB" : {
            "description" : "Street for location B",
            "type" : "string"
          },
          "HomeNumberB" : {
            "description" : "HomeNumber for location B",
            "type" : "string"
          },
          "BlockB" : {
            "description" : "Block for location B",
            "type" : "string"
          },
          "StairwayB" : {
            "description" : "Stairway for location B",
            "type" : "string"
          },
          "FloorB" : {
            "description" : "Floor for location B",
            "type" : "string"
          },
          "DoorB" : {
            "description" : "Door for location B",
            "type" : "string"
          },
          "CommunityB" : {
            "description" : "Community for location B",
            "type" : "string"
          },
          "CommunityCodeB" : {
            "description" : "Community code for location B",
            "type" : "string"
          },
          "DistrictCommunityB" : {
            "description" : "District Community for location B",
            "type" : "string"
          },
          "DistrictCommunityCodeB" : {
            "description" : "District Community code for location B",
            "type" : "string"
          },
          "PropertyNumberB" : {
            "description" : "Property Number for location B",
            "type" : "string"
          },
          "LocationA" : {
            "description" : "First location combined from postal1_cd, city1_nam, street1_nam, block1_num, house1_num, staircase1_num, floor1_num, door1_num",
            "type" : "string"
          },
          "PostcodeA" : {
            "description" : "Postcode for location A",
            "type" : "string"
          },
          "CityA" : {
            "description" : "City for location A",
            "type" : "string"
          },
          "StreetA" : {
            "description" : "Street for location A",
            "type" : "string"
          },
          "HomeNumberA" : {
            "description" : "HomeNumber for location A",
            "type" : "string"
          },
          "BlockA" : {
            "description" : "Block for location A",
            "type" : "string"
          },
          "StairwayA" : {
            "description" : "Stairway for location A",
            "type" : "string"
          },
          "FloorA" : {
            "description" : "Floor for location A",
            "type" : "string"
          },
          "DoorA" : {
            "description" : "Door for location A",
            "type" : "string"
          },
          "CommunityA" : {
            "description" : "Community for location A",
            "type" : "string"
          },
          "CommunityCodeA" : {
            "description" : "Community code for location A",
            "type" : "string"
          },
          "DistrictCommunityA" : {
            "description" : "District Community for location A",
            "type" : "string"
          },
          "DistrictCommunityCodeA" : {
            "description" : "District Community code for location A",
            "type" : "string"
          },
          "PropertyNumberA" : {
            "description" : "Property Number for location A",
            "type" : "string"
          },
          "BandwidthWithuom" : {
            "description" : "Band width Withuom",
            "type" : "string"
          },
          "ClassOfService" : {
            "description" : "Class Of Service",
            "type" : "string"
          },
          "ServiceLevelAgreement" : {
            "description" : "The agreement level of service",
            "type" : "string"
          },
          "ServiceId" : {
            "description" : "Id of service",
            "type" : "string"
          },
          "ProtectionMode" : {
            "description" : "Protection mode",
            "type" : "string"
          },
          "Color" : {
            "description" : "Color",
            "type" : "string"
          },
          "LineStatus" : {
            "description" : "Line Status",
            "type" : "string"
          },
          "CustomerOrderNumber" : {
            "description" : "Customer order number",
            "type" : "string"
          },
          "LocationInformationA" : {
            "description" : "Locationinformation A",
            "type" : "string"
          },
          "LocationInformationB" : {
            "description" : "Locationinformation B",
            "type" : "string"
          },
          "DateLineSetupPlanned" : {
            "description" : "Date Line-Setup (planned)",
            "type" : "string"
          },
          "DateLineSetupRealized" : {
            "description" : "Date Line-Setup (realized)",
            "type" : "string"
          },
          "DateLineDeactivationPlanned" : {
            "description" : "Date Line-Deactivation (planned)",
            "type" : "string"
          },
          "DateLineDeactivationRealized" : {
            "description" : "Date Line-Deactivation/Last change (realized)",
            "type" : "string"
          },
          "PaymentObligationStartDate" : {
            "description" : "Payment obligation start date",
            "type" : "string"
          },
          "PaymentObligationEndDate" : {
            "description" : "Payment obligation end date",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProductsOverviewResult" : {
        "example" : {
          "ProductOverviews" : [ {
            "ProductSubCategory" : "ProductSubCategory",
            "ProductMainCategory" : "ProductMainCategory",
            "ProductGroups" : [ {
              "ProductType" : "ProductType",
              "Name" : "Name"
            }, {
              "ProductType" : "ProductType",
              "Name" : "Name"
            } ],
            "SubCategoryKey" : "SubCategoryKey"
          }, {
            "ProductSubCategory" : "ProductSubCategory",
            "ProductMainCategory" : "ProductMainCategory",
            "ProductGroups" : [ {
              "ProductType" : "ProductType",
              "Name" : "Name"
            }, {
              "ProductType" : "ProductType",
              "Name" : "Name"
            } ],
            "SubCategoryKey" : "SubCategoryKey"
          } ]
        },
        "properties" : {
          "ProductOverviews" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductOverview"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ProductOverview" : {
        "example" : {
          "ProductSubCategory" : "ProductSubCategory",
          "ProductMainCategory" : "ProductMainCategory",
          "ProductGroups" : [ {
            "ProductType" : "ProductType",
            "Name" : "Name"
          }, {
            "ProductType" : "ProductType",
            "Name" : "Name"
          } ],
          "SubCategoryKey" : "SubCategoryKey"
        },
        "properties" : {
          "ProductMainCategory" : {
            "description" : "Product of main Category",
            "type" : "string"
          },
          "ProductSubCategory" : {
            "description" : "Product of sub Category",
            "type" : "string"
          },
          "SubCategoryKey" : {
            "description" : "Sub Category unique key",
            "type" : "string"
          },
          "ProductGroups" : {
            "description" : "Product Groups contained in this Main and Sub Category",
            "items" : {
              "$ref" : "#/components/schemas/ProductTypedGroup"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ProductTypedGroup" : {
        "description" : "Information about a single Product Group (Level 3)",
        "example" : {
          "ProductType" : "ProductType",
          "Name" : "Name"
        },
        "properties" : {
          "Name" : {
            "description" : "Name of the Product Group (Level 3)",
            "maxLength" : 100,
            "type" : "string"
          },
          "ProductType" : {
            "description" : "Product type",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetAddressesResult" : {
        "example" : {
          "TotalCount" : 0,
          "Items" : [ {
            "KumsIds" : [ "KumsIds", "KumsIds" ],
            "LkmsId" : "LkmsId",
            "LocationName" : "LocationName"
          }, {
            "KumsIds" : [ "KumsIds", "KumsIds" ],
            "LkmsId" : "LkmsId",
            "LocationName" : "LocationName"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/Address"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "Address" : {
        "example" : {
          "KumsIds" : [ "KumsIds", "KumsIds" ],
          "LkmsId" : "LkmsId",
          "LocationName" : "LocationName"
        },
        "properties" : {
          "KumsIds" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "LkmsId" : {
            "description" : "Locations Id",
            "type" : "string"
          },
          "LocationName" : {
            "description" : "Location name",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "AddressDetailsResult" : {
        "example" : {
          "AddressProducts" : [ {
            "HomeNumberB" : "HomeNumberB",
            "HomeNumberA" : "HomeNumberA",
            "DateLineDeactivationPlanned" : "DateLineDeactivationPlanned",
            "LineStatus" : "LineStatus",
            "LocationInformationB" : "LocationInformationB",
            "LocationInformationA" : "LocationInformationA",
            "CustomerNumber" : "CustomerNumber",
            "DateLineDeactivationRealized" : "DateLineDeactivationRealized",
            "LocationA" : "LocationA",
            "LocationB" : "LocationB",
            "DateLineSetupRealized" : "DateLineSetupRealized",
            "PaymentObligationStartDate" : "PaymentObligationStartDate",
            "DistrictCommunityA" : "DistrictCommunityA",
            "DistrictCommunityB" : "DistrictCommunityB",
            "Color" : "Color",
            "ProductType" : "ProductType",
            "ServiceLevelAgreement" : "ServiceLevelAgreement",
            "PaymentObligationEndDate" : "PaymentObligationEndDate",
            "CommunityA" : "CommunityA",
            "ProductNumber" : "ProductNumber",
            "CommunityB" : "CommunityB",
            "DateLineSetupPlanned" : "DateLineSetupPlanned",
            "BlockB" : "BlockB",
            "BlockA" : "BlockA",
            "PostcodeA" : "PostcodeA",
            "PostcodeB" : "PostcodeB",
            "DoorA" : "DoorA",
            "StairwayB" : "StairwayB",
            "StairwayA" : "StairwayA",
            "DoorB" : "DoorB",
            "CommunityCodeB" : "CommunityCodeB",
            "ClassOfService" : "ClassOfService",
            "FloorA" : "FloorA",
            "LineNumber" : "LineNumber",
            "FloorB" : "FloorB",
            "CommunityCodeA" : "CommunityCodeA",
            "ServiceId" : "ServiceId",
            "PropertyNumberB" : "PropertyNumberB",
            "PropertyNumberA" : "PropertyNumberA",
            "CustomerName" : "CustomerName",
            "DistrictCommunityCodeA" : "DistrictCommunityCodeA",
            "DistrictCommunityCodeB" : "DistrictCommunityCodeB",
            "LineId" : "LineId",
            "LkmsIdA" : "LkmsIdA",
            "LkmsIdB" : "LkmsIdB",
            "AccountNumber" : "AccountNumber",
            "ProtectionMode" : "ProtectionMode",
            "CustomerOrderNumber" : "CustomerOrderNumber",
            "StreetB" : "StreetB",
            "StreetA" : "StreetA",
            "CityB" : "CityB",
            "CityA" : "CityA",
            "BandwidthWithuom" : "BandwidthWithuom"
          }, {
            "HomeNumberB" : "HomeNumberB",
            "HomeNumberA" : "HomeNumberA",
            "DateLineDeactivationPlanned" : "DateLineDeactivationPlanned",
            "LineStatus" : "LineStatus",
            "LocationInformationB" : "LocationInformationB",
            "LocationInformationA" : "LocationInformationA",
            "CustomerNumber" : "CustomerNumber",
            "DateLineDeactivationRealized" : "DateLineDeactivationRealized",
            "LocationA" : "LocationA",
            "LocationB" : "LocationB",
            "DateLineSetupRealized" : "DateLineSetupRealized",
            "PaymentObligationStartDate" : "PaymentObligationStartDate",
            "DistrictCommunityA" : "DistrictCommunityA",
            "DistrictCommunityB" : "DistrictCommunityB",
            "Color" : "Color",
            "ProductType" : "ProductType",
            "ServiceLevelAgreement" : "ServiceLevelAgreement",
            "PaymentObligationEndDate" : "PaymentObligationEndDate",
            "CommunityA" : "CommunityA",
            "ProductNumber" : "ProductNumber",
            "CommunityB" : "CommunityB",
            "DateLineSetupPlanned" : "DateLineSetupPlanned",
            "BlockB" : "BlockB",
            "BlockA" : "BlockA",
            "PostcodeA" : "PostcodeA",
            "PostcodeB" : "PostcodeB",
            "DoorA" : "DoorA",
            "StairwayB" : "StairwayB",
            "StairwayA" : "StairwayA",
            "DoorB" : "DoorB",
            "CommunityCodeB" : "CommunityCodeB",
            "ClassOfService" : "ClassOfService",
            "FloorA" : "FloorA",
            "LineNumber" : "LineNumber",
            "FloorB" : "FloorB",
            "CommunityCodeA" : "CommunityCodeA",
            "ServiceId" : "ServiceId",
            "PropertyNumberB" : "PropertyNumberB",
            "PropertyNumberA" : "PropertyNumberA",
            "CustomerName" : "CustomerName",
            "DistrictCommunityCodeA" : "DistrictCommunityCodeA",
            "DistrictCommunityCodeB" : "DistrictCommunityCodeB",
            "LineId" : "LineId",
            "LkmsIdA" : "LkmsIdA",
            "LkmsIdB" : "LkmsIdB",
            "AccountNumber" : "AccountNumber",
            "ProtectionMode" : "ProtectionMode",
            "CustomerOrderNumber" : "CustomerOrderNumber",
            "StreetB" : "StreetB",
            "StreetA" : "StreetA",
            "CityB" : "CityB",
            "CityA" : "CityA",
            "BandwidthWithuom" : "BandwidthWithuom"
          } ]
        },
        "properties" : {
          "AddressProducts" : {
            "description" : "Array of AddressProducts",
            "items" : {
              "$ref" : "#/components/schemas/DataProduct"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "AddressesCountResult" : {
        "example" : {
          "Count" : 0
        },
        "properties" : {
          "Count" : {
            "description" : "Addresses count.",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "SearchableColumnsResult" : {
        "description" : "Wrapper object for all searcheable columns entries.",
        "example" : {
          "Items" : [ {
            "DisplayOrder" : 0,
            "MultiSelectAbility" : true,
            "PossibleTagValues" : [ "PossibleTagValues", "PossibleTagValues" ],
            "IsExternal" : true,
            "DisplayName" : "DisplayName",
            "Validators" : [ {
              "Values" : [ "Values", "Values" ],
              "Name" : "MyEpRequired"
            }, {
              "Values" : [ "Values", "Values" ],
              "Name" : "MyEpRequired"
            } ],
            "FieldName" : "FieldName",
            "IsInternal" : true,
            "FieldType" : "Text"
          }, {
            "DisplayOrder" : 0,
            "MultiSelectAbility" : true,
            "PossibleTagValues" : [ "PossibleTagValues", "PossibleTagValues" ],
            "IsExternal" : true,
            "DisplayName" : "DisplayName",
            "Validators" : [ {
              "Values" : [ "Values", "Values" ],
              "Name" : "MyEpRequired"
            }, {
              "Values" : [ "Values", "Values" ],
              "Name" : "MyEpRequired"
            } ],
            "FieldName" : "FieldName",
            "IsInternal" : true,
            "FieldType" : "Text"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/Column"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Column" : {
        "description" : "Contains the description of searchable columns",
        "example" : {
          "DisplayOrder" : 0,
          "MultiSelectAbility" : true,
          "PossibleTagValues" : [ "PossibleTagValues", "PossibleTagValues" ],
          "IsExternal" : true,
          "DisplayName" : "DisplayName",
          "Validators" : [ {
            "Values" : [ "Values", "Values" ],
            "Name" : "MyEpRequired"
          }, {
            "Values" : [ "Values", "Values" ],
            "Name" : "MyEpRequired"
          } ],
          "FieldName" : "FieldName",
          "IsInternal" : true,
          "FieldType" : "Text"
        },
        "properties" : {
          "FieldName" : {
            "description" : "The identifier of the search column",
            "type" : "string"
          },
          "DisplayName" : {
            "description" : "The column name in the correct language (http context )",
            "type" : "string"
          },
          "DisplayOrder" : {
            "description" : "Position of the field in drop down",
            "type" : "integer"
          },
          "MultiSelectAbility" : {
            "description" : "Ability to select few times SearchableColumn",
            "type" : "boolean"
          },
          "FieldType" : {
            "description" : "The searchtype of the field",
            "enum" : [ "Text", "Tag", "DateRange", "Numeric" ],
            "type" : "string"
          },
          "IsInternal" : {
            "description" : "True if display only for internal users, false if for all users",
            "type" : "boolean"
          },
          "IsExternal" : {
            "description" : "True if display only for external users",
            "type" : "boolean"
          },
          "PossibleTagValues" : {
            "description" : "Specifies the possible values for field type 'Tag', otherwise null",
            "items" : {
              "maxLength" : 50,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          },
          "Validators" : {
            "items" : {
              "$ref" : "#/components/schemas/Validator"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "Validator" : {
        "description" : "Contains the description of searchable columns",
        "example" : {
          "Values" : [ "Values", "Values" ],
          "Name" : "MyEpRequired"
        },
        "properties" : {
          "Name" : {
            "description" : "The name of the validator",
            "enum" : [ "MyEpRequired", "MyEpStringLength", "MyEpRange", "MyEpMaxLength", "MyEpMinLength" ],
            "type" : "string"
          },
          "Values" : {
            "description" : "A set of values that is applied to the validator, depends on the validator. 'MyEpRequired' needs no params, 'MyEpStringLength' needs one param, ...",
            "items" : {
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "AdvancedSearchItem" : {
        "description" : "Contains the description of searchable columns",
        "example" : {
          "FieldName" : "FieldName",
          "SearchValues" : [ "SearchValues", "SearchValues" ]
        },
        "properties" : {
          "FieldName" : {
            "description" : "Identifier of the column that should be searched for.",
            "maxLength" : 2048,
            "minLength" : 1,
            "type" : "string"
          },
          "SearchValues" : {
            "description" : "The list of filter criterias.",
            "items" : {
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "TusResellerProductDetailsResult" : {
        "description" : "Wrapper object for all searcheable columns entries.",
        "example" : {
          "AccessBandwidth" : "AccessBandwidth",
          "EolService" : "EolService",
          "VpnDetails" : [ {
            "CeVlanId" : "CeVlanId",
            "Redundancy" : "Redundancy",
            "VpnName" : "VpnName",
            "Bandwidth" : "Bandwidth",
            "NotificationMailaddress" : "NotificationMailaddress",
            "LanNet" : "LanNet",
            "VpnId" : "VpnId"
          }, {
            "CeVlanId" : "CeVlanId",
            "Redundancy" : "Redundancy",
            "VpnName" : "VpnName",
            "Bandwidth" : "Bandwidth",
            "NotificationMailaddress" : "NotificationMailaddress",
            "LanNet" : "LanNet",
            "VpnId" : "VpnId"
          } ],
          "Address" : "Address",
          "ConnectionNetwork" : "ConnectionNetwork",
          "State" : "State",
          "PhysicalExtension" : "PhysicalExtension",
          "ClearingNumber" : "ClearingNumber"
        },
        "properties" : {
          "EolService" : {
            "description" : "EOL Service (EOL_DIENSTLEISTUNG)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Address" : {
            "description" : "Address (ADDRESS)",
            "maxLength" : 100,
            "type" : "string"
          },
          "State" : {
            "description" : "Bundesland (Lkms_Bundesland)",
            "maxLength" : 100,
            "type" : "string"
          },
          "AccessBandwidth" : {
            "description" : "Access Bandwidth (ACCESS_BANDWIDTH)",
            "maxLength" : 100,
            "type" : "string"
          },
          "PhysicalExtension" : {
            "description" : "Physikalische Anschlussnummer (PHYS_ANSCHLUSSNUMMER)",
            "maxLength" : 100,
            "type" : "string"
          },
          "ClearingNumber" : {
            "description" : "Clearing Number (EOL_VERRECHNUNGSNUMMER)",
            "maxLength" : 100,
            "type" : "string"
          },
          "ConnectionNetwork" : {
            "description" : "Leitungsbezeichnung (LINKNET)",
            "maxLength" : 100,
            "type" : "string"
          },
          "VpnDetails" : {
            "description" : "Details of all VPNs associated with this TuS Reseller product",
            "items" : {
              "$ref" : "#/components/schemas/VpnDetail"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "AvailableAccessLinesResult" : {
        "description" : "Information about available TUS Reseller.",
        "example" : {
          "HasInventar" : true,
          "HasTusm" : true,
          "HasTusr" : true,
          "HasTusb" : true
        },
        "properties" : {
          "HasTusr" : {
            "description" : "Has TUSR",
            "type" : "boolean"
          },
          "HasTusb" : {
            "description" : "Has TUSB",
            "type" : "boolean"
          },
          "HasTusm" : {
            "description" : "Has TUSM",
            "type" : "boolean"
          },
          "HasInventar" : {
            "description" : "Has Tus equipment",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "TusZielerweiterungProductDetailsResult" : {
        "description" : "List of receiving centers names",
        "example" : {
          "CheckPoints" : [ "CheckPoints", "CheckPoints" ]
        },
        "properties" : {
          "CheckPoints" : {
            "description" : "List of receiving centers names",
            "items" : {
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "PaymentProductDetailsResult" : {
        "description" : "Payment Product Details",
        "example" : {
          "PaymentProductDetails" : [ {
            "LocationState" : "LocationState",
            "LocationZipCode" : "LocationZipCode",
            "ServiceOption" : "ServiceOption",
            "LocationCountry" : "LocationCountry",
            "LocationId" : 0,
            "LocationCity" : "LocationCity",
            "Terminal" : "Terminal",
            "AccountNumber" : "AccountNumber",
            "CommitmentEnd" : "2000-01-23T04:56:07.000+00:00",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "CommitmentStart" : "2000-01-23T04:56:07.000+00:00",
            "TerminalId" : "TerminalId",
            "LocationStreet" : "LocationStreet"
          }, {
            "LocationState" : "LocationState",
            "LocationZipCode" : "LocationZipCode",
            "ServiceOption" : "ServiceOption",
            "LocationCountry" : "LocationCountry",
            "LocationId" : 0,
            "LocationCity" : "LocationCity",
            "Terminal" : "Terminal",
            "AccountNumber" : "AccountNumber",
            "CommitmentEnd" : "2000-01-23T04:56:07.000+00:00",
            "Kums" : "Kums",
            "LocationDescription" : "LocationDescription",
            "CommitmentStart" : "2000-01-23T04:56:07.000+00:00",
            "TerminalId" : "TerminalId",
            "LocationStreet" : "LocationStreet"
          } ],
          "TotalCount" : 6
        },
        "properties" : {
          "PaymentProductDetails" : {
            "description" : "Details of the Products of the customer contained in this Product Group",
            "items" : {
              "$ref" : "#/components/schemas/PaymentProductDetails"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "PaymentProductDetails" : {
        "description" : "Details for a Payment product",
        "example" : {
          "LocationState" : "LocationState",
          "LocationZipCode" : "LocationZipCode",
          "ServiceOption" : "ServiceOption",
          "LocationCountry" : "LocationCountry",
          "LocationId" : 0,
          "LocationCity" : "LocationCity",
          "Terminal" : "Terminal",
          "AccountNumber" : "AccountNumber",
          "CommitmentEnd" : "2000-01-23T04:56:07.000+00:00",
          "Kums" : "Kums",
          "LocationDescription" : "LocationDescription",
          "CommitmentStart" : "2000-01-23T04:56:07.000+00:00",
          "TerminalId" : "TerminalId",
          "LocationStreet" : "LocationStreet"
        },
        "properties" : {
          "AccountNumber" : {
            "description" : "Verrechnungsnummer (Account_Number)",
            "maxLength" : 100,
            "type" : "string"
          },
          "TerminalId" : {
            "description" : "Terminal id (Terminal_ID)",
            "maxLength" : 100,
            "type" : "string"
          },
          "Terminal" : {
            "description" : "Terminal name (Terminal)",
            "maxLength" : 100,
            "type" : "string"
          },
          "ServiceOption" : {
            "description" : "Service option name (Service_Option)",
            "maxLength" : 100,
            "type" : "string"
          },
          "CommitmentStart" : {
            "description" : "(CommitmentStartDate)",
            "format" : "date-time",
            "type" : "string"
          },
          "CommitmentEnd" : {
            "description" : "(CommitmentEndDate)",
            "format" : "date-time",
            "type" : "string"
          },
          "LocationId" : {
            "description" : "The location id was used to defer zip code and the other location properties",
            "format" : "int64",
            "type" : "integer"
          },
          "LocationDescription" : {
            "description" : "Customer Location Description",
            "maxLength" : 100,
            "type" : "string"
          },
          "LocationCountry" : {
            "description" : "Name of the Country of the Customer Location",
            "maxLength" : 100,
            "type" : "string"
          },
          "LocationState" : {
            "description" : "State of the Customer Location",
            "maxLength" : 100,
            "type" : "string"
          },
          "LocationZipCode" : {
            "description" : "ZIP Code of the Customer Location",
            "maxLength" : 10,
            "type" : "string"
          },
          "LocationCity" : {
            "description" : "Name of the City of the Customer Location",
            "maxLength" : 100,
            "type" : "string"
          },
          "LocationStreet" : {
            "description" : "Name and Number of the Street of the Customer Location",
            "maxLength" : 100,
            "type" : "string"
          },
          "Kums" : {
            "description" : "The customer ID.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PscListResult" : {
        "description" : "Wrapper object for all ProductSpecCharacteristic entries.",
        "example" : {
          "TotalCount" : 0,
          "Items" : [ {
            "PscId" : "PscId",
            "IsVisible" : true,
            "Name" : "Name",
            "Remark" : "Remark"
          }, {
            "PscId" : "PscId",
            "IsVisible" : true,
            "Name" : "Name",
            "Remark" : "Remark"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductSpecCharacteristic"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "ProductSpecCharacteristic" : {
        "description" : "Contains information about ProductSpecCharacteristic",
        "example" : {
          "PscId" : "PscId",
          "IsVisible" : true,
          "Name" : "Name",
          "Remark" : "Remark"
        },
        "properties" : {
          "PscId" : {
            "description" : "The identifier of PSC",
            "type" : "string"
          },
          "Name" : {
            "description" : "The name of PSC",
            "type" : "string"
          },
          "Remark" : {
            "description" : "The description of PSC",
            "type" : "string"
          },
          "IsVisible" : {
            "description" : "The PSC visibility for customer",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "ExternalSlaCodes" : {
        "description" : "Contains clear text for SLA Codes",
        "example" : {
          "Items" : [ {
            "InternalCode" : "InternalCode",
            "ExternalCode" : "ExternalCode"
          }, {
            "InternalCode" : "InternalCode",
            "ExternalCode" : "ExternalCode"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/ExternalSlaCode"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ExternalSlaCode" : {
        "description" : "Contains clear text for intternal SLA Code",
        "example" : {
          "InternalCode" : "InternalCode",
          "ExternalCode" : "ExternalCode"
        },
        "properties" : {
          "InternalCode" : {
            "description" : "Internal Sla Code",
            "type" : "string"
          },
          "ExternalCode" : {
            "description" : "External Sla Code",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetProductGroupFiltersResult" : {
        "description" : "List of product names (level2) for filters",
        "example" : {
          "Items" : [ {
            "FilterType" : "FilterType",
            "ProductLevel2NamesFilterItems" : [ "ProductLevel2NamesFilterItems", "ProductLevel2NamesFilterItems" ]
          }, {
            "FilterType" : "FilterType",
            "ProductLevel2NamesFilterItems" : [ "ProductLevel2NamesFilterItems", "ProductLevel2NamesFilterItems" ]
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductGroupFilter"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ProductGroupFilter" : {
        "description" : "Contains the description of searchable columns",
        "example" : {
          "FilterType" : "FilterType",
          "ProductLevel2NamesFilterItems" : [ "ProductLevel2NamesFilterItems", "ProductLevel2NamesFilterItems" ]
        },
        "properties" : {
          "FilterType" : {
            "description" : "The identifier of filter",
            "type" : "string"
          },
          "ProductLevel2NamesFilterItems" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GetProductsLevel2ByLocationsResult" : {
        "description" : "Contains List of ProductsLevel2ByLocation",
        "example" : {
          "Items" : [ {
            "KumsLocationId" : "KumsLocationId",
            "KumsId" : "KumsId",
            "LocationId" : 0,
            "ProductLevel2Names" : [ "ProductLevel2Names", "ProductLevel2Names" ]
          }, {
            "KumsLocationId" : "KumsLocationId",
            "KumsId" : "KumsId",
            "LocationId" : 0,
            "ProductLevel2Names" : [ "ProductLevel2Names", "ProductLevel2Names" ]
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductsLevel2ByLocation"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ProductsLevel2ByLocation" : {
        "description" : "Contains the description of searchable columns",
        "example" : {
          "KumsLocationId" : "KumsLocationId",
          "KumsId" : "KumsId",
          "LocationId" : 0,
          "ProductLevel2Names" : [ "ProductLevel2Names", "ProductLevel2Names" ]
        },
        "properties" : {
          "KumsLocationId" : {
            "description" : "The identifier",
            "type" : "string"
          },
          "KumsId" : {
            "description" : "Customer number",
            "type" : "string"
          },
          "LocationId" : {
            "description" : "Location Id",
            "type" : "integer"
          },
          "ProductLevel2Names" : {
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "GetProductDetailsExportConfigResult" : {
        "description" : "Contains List of ProductDetailsExportConfig",
        "example" : {
          "Items" : [ {
            "Order" : 0,
            "PropertyName" : "PropertyName",
            "DisplayName" : "DisplayName",
            "FieldType" : "FieldType"
          }, {
            "Order" : 0,
            "PropertyName" : "PropertyName",
            "DisplayName" : "DisplayName",
            "FieldType" : "FieldType"
          } ]
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/ProductDetailsExportConfig"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ProductDetailsExportConfig" : {
        "description" : "Contains the description of searchable columns",
        "example" : {
          "Order" : 0,
          "PropertyName" : "PropertyName",
          "DisplayName" : "DisplayName",
          "FieldType" : "FieldType"
        },
        "properties" : {
          "PropertyName" : {
            "description" : "Column identifier (should be equal to one of fields of ProductDetail)",
            "type" : "string"
          },
          "DisplayName" : {
            "description" : "Localized name of the column",
            "type" : "string"
          },
          "FieldType" : {
            "description" : "Column type for Excel formatting (String, DateTime, Currency, Integer, NullInteger, NonZeroInteger)",
            "type" : "string"
          },
          "Order" : {
            "description" : "Order of the column",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "GetTusEquipmentsResult" : {
        "description" : "Contains List of equipments for Tus product",
        "example" : {
          "Items" : [ {
            "ContractEnd" : "2000-01-23T04:56:07.000+00:00",
            "InventoryNumber" : "InventoryNumber",
            "ContractType" : "ContractType",
            "ComponentName" : "ComponentName",
            "Maintenance" : "Maintenance",
            "AlarmNumber" : "AlarmNumber"
          }, {
            "ContractEnd" : "2000-01-23T04:56:07.000+00:00",
            "InventoryNumber" : "InventoryNumber",
            "ContractType" : "ContractType",
            "ComponentName" : "ComponentName",
            "Maintenance" : "Maintenance",
            "AlarmNumber" : "AlarmNumber"
          } ],
          "ItemsCount" : 0
        },
        "properties" : {
          "Items" : {
            "items" : {
              "$ref" : "#/components/schemas/GetTusEquipmentResult"
            },
            "type" : "array"
          },
          "ItemsCount" : {
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "GetTusEquipmentResult" : {
        "description" : "Contains the description of Tus equipment",
        "example" : {
          "ContractEnd" : "2000-01-23T04:56:07.000+00:00",
          "InventoryNumber" : "InventoryNumber",
          "ContractType" : "ContractType",
          "ComponentName" : "ComponentName",
          "Maintenance" : "Maintenance",
          "AlarmNumber" : "AlarmNumber"
        },
        "properties" : {
          "InventoryNumber" : {
            "description" : "number of equipment Inventory",
            "type" : "string"
          },
          "ComponentName" : {
            "description" : "name of Component",
            "type" : "string"
          },
          "ContractEnd" : {
            "description" : "end date for Tus Equipment",
            "format" : "date-time",
            "type" : "string"
          },
          "ContractType" : {
            "description" : "type contract for Tus Equipment",
            "type" : "string"
          },
          "AlarmNumber" : {
            "description" : "alarm number of Tus Equipment",
            "type" : "string"
          },
          "Maintenance" : {
            "description" : "maintenance of Tus Equipment",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BillingInvoicesResult" : {
        "description" : "invoices of the WS-Billing-Systems SAP/MAXBILL/TWIST.",
        "example" : {
          "TotalCount" : 1,
          "BillingInvoicesDetails" : [ {
            "ServicePeriodStart" : "2000-01-23T04:56:07.000+00:00",
            "CustomerNumber" : "CustomerNumber",
            "ServicePeriodEnd" : "2000-01-23T04:56:07.000+00:00",
            "InvoiceAmountGross" : 6.0274563,
            "InvoiceAmountNet" : 0.8008282,
            "SourceName" : "SourceName",
            "CustomerAccount" : "CustomerAccount",
            "CustomerName" : "CustomerName",
            "InvoiceNumber" : "InvoiceNumber",
            "InvoiceDate" : "2000-01-23T04:56:07.000+00:00",
            "DueDate" : "2000-01-23T04:56:07.000+00:00"
          }, {
            "ServicePeriodStart" : "2000-01-23T04:56:07.000+00:00",
            "CustomerNumber" : "CustomerNumber",
            "ServicePeriodEnd" : "2000-01-23T04:56:07.000+00:00",
            "InvoiceAmountGross" : 6.0274563,
            "InvoiceAmountNet" : 0.8008282,
            "SourceName" : "SourceName",
            "CustomerAccount" : "CustomerAccount",
            "CustomerName" : "CustomerName",
            "InvoiceNumber" : "InvoiceNumber",
            "InvoiceDate" : "2000-01-23T04:56:07.000+00:00",
            "DueDate" : "2000-01-23T04:56:07.000+00:00"
          } ]
        },
        "properties" : {
          "BillingInvoicesDetails" : {
            "description" : "Details of the invoices from SAP/MAXBILL/TWIST",
            "items" : {
              "$ref" : "#/components/schemas/BillingInvoicesDetail"
            },
            "type" : "array",
            "x-type-options" : {
              "min" : 10,
              "max" : 20
            }
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer",
            "x-chance-type" : "natural",
            "x-type-options" : {
              "min" : 1,
              "max" : 1000000
            }
          }
        },
        "type" : "object"
      },
      "BillingInvoiceFileResult" : {
        "description" : "Container for file content",
        "example" : {
          "Content" : "Content"
        },
        "properties" : {
          "Content" : {
            "description" : "PDF File content as base64 string.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "BillingInvoicesDetail" : {
        "description" : "Details for a single invoice",
        "example" : {
          "ServicePeriodStart" : "2000-01-23T04:56:07.000+00:00",
          "CustomerNumber" : "CustomerNumber",
          "ServicePeriodEnd" : "2000-01-23T04:56:07.000+00:00",
          "InvoiceAmountGross" : 6.0274563,
          "InvoiceAmountNet" : 0.8008282,
          "SourceName" : "SourceName",
          "CustomerAccount" : "CustomerAccount",
          "CustomerName" : "CustomerName",
          "InvoiceNumber" : "InvoiceNumber",
          "InvoiceDate" : "2000-01-23T04:56:07.000+00:00",
          "DueDate" : "2000-01-23T04:56:07.000+00:00"
        },
        "properties" : {
          "CustomerNumber" : {
            "description" : "The customer number (KUMS)\t.",
            "type" : "string"
          },
          "CustomerName" : {
            "description" : "The Customer name.",
            "type" : "string"
          },
          "CustomerAccount" : {
            "description" : "CustomerAccount",
            "type" : "string"
          },
          "InvoiceNumber" : {
            "description" : "InvoiceNumber",
            "type" : "string"
          },
          "ServicePeriodStart" : {
            "description" : "start of billing period",
            "format" : "date-time",
            "type" : "string"
          },
          "ServicePeriodEnd" : {
            "description" : "end of billing period",
            "format" : "date-time",
            "type" : "string"
          },
          "InvoiceDate" : {
            "description" : "Invoice date",
            "format" : "date-time",
            "type" : "string"
          },
          "DueDate" : {
            "description" : "Due date",
            "format" : "date-time",
            "type" : "string"
          },
          "InvoiceAmountNet" : {
            "description" : "Invoice amount Netto",
            "format" : "float",
            "type" : "number"
          },
          "InvoiceAmountGross" : {
            "description" : "Invoice amount Brutto",
            "format" : "float",
            "type" : "number"
          },
          "SourceName" : {
            "description" : "name of source system where get the invoices",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "VirtualFirewallResult" : {
        "description" : "virtual firewall details",
        "example" : {
          "TotalCount" : 0,
          "VirtualFirewallDetails" : [ {
            "RoleName" : "RoleName",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "ProductName" : "ProductName",
            "KumsId" : "KumsId",
            "ServiceName" : "ServiceName",
            "WebACNumber" : "WebACNumber"
          }, {
            "RoleName" : "RoleName",
            "CallNumber" : {
              "CC" : "CC",
              "SN" : "SN",
              "NDC" : "NDC"
            },
            "ProductName" : "ProductName",
            "KumsId" : "KumsId",
            "ServiceName" : "ServiceName",
            "WebACNumber" : "WebACNumber"
          } ]
        },
        "properties" : {
          "VirtualFirewallDetails" : {
            "description" : "Details of the virtual firewall",
            "items" : {
              "$ref" : "#/components/schemas/VirtualFirewallDetails"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "VirtualFirewallDetails" : {
        "description" : "Details for a virtual firewall",
        "example" : {
          "RoleName" : "RoleName",
          "CallNumber" : {
            "CC" : "CC",
            "SN" : "SN",
            "NDC" : "NDC"
          },
          "ProductName" : "ProductName",
          "KumsId" : "KumsId",
          "ServiceName" : "ServiceName",
          "WebACNumber" : "WebACNumber"
        },
        "properties" : {
          "ServiceName" : {
            "description" : "service name",
            "type" : "string"
          },
          "ProductName" : {
            "description" : "product name",
            "type" : "string"
          },
          "WebACNumber" : {
            "description" : "AON Account Number",
            "type" : "string"
          },
          "RoleName" : {
            "description" : "Role",
            "type" : "string"
          },
          "CallNumber" : {
            "$ref" : "#/components/schemas/CallNumber"
          },
          "KumsId" : {
            "description" : "The customer ID.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "DeviceAsAServiceResult" : {
        "description" : "Device as a Service products list",
        "example" : {
          "TotalCount" : 0,
          "DeviceAsAServiceDetails" : [ {
            "KumsId" : "KumsId",
            "Ban" : "Ban",
            "Rufnummer" : "Rufnummer",
            "ServiceDisplayName" : "ServiceDisplayName"
          }, {
            "KumsId" : "KumsId",
            "Ban" : "Ban",
            "Rufnummer" : "Rufnummer",
            "ServiceDisplayName" : "ServiceDisplayName"
          } ]
        },
        "properties" : {
          "DeviceAsAServiceDetails" : {
            "description" : "Details of the Device as a Service",
            "items" : {
              "$ref" : "#/components/schemas/DeviceAsAServiceDetails"
            },
            "type" : "array"
          },
          "TotalCount" : {
            "description" : "Total number of results that can be returned (without paging).",
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "DeviceAsAServiceDetails" : {
        "description" : "Details for a Device as a Service",
        "example" : {
          "KumsId" : "KumsId",
          "Ban" : "Ban",
          "Rufnummer" : "Rufnummer",
          "ServiceDisplayName" : "ServiceDisplayName"
        },
        "properties" : {
          "ServiceDisplayName" : {
            "description" : "service display name",
            "type" : "string"
          },
          "Ban" : {
            "description" : "BAN",
            "type" : "string"
          },
          "Rufnummer" : {
            "description" : "Rufnummer",
            "type" : "string"
          },
          "KumsId" : {
            "description" : "The customer ID.",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ValidateWebAcNumberResult" : {
        "example" : {
          "ProductName" : "ProductName",
          "CustomerNumber" : "CustomerNumber",
          "IsWebAcNumber" : true,
          "WebAcNumber" : "WebAcNumber"
        },
        "properties" : {
          "IsWebAcNumber" : {
            "description" : "True if WebAcNumber belongs to the product A1 Virtual Firewall or A1 Business Firewall",
            "type" : "boolean"
          },
          "WebAcNumber" : {
            "description" : "The WebAc number",
            "type" : "string"
          },
          "ProductName" : {
            "description" : "Product Name",
            "type" : "string"
          },
          "CustomerNumber" : {
            "description" : "CustomerNumber",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "KumsIdFilter" : {
        "description" : "Kums Ids + corresponding filters",
        "example" : {
          "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
          "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
          "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
          "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
          "KumsIds" : [ "KumsIds", "KumsIds" ]
        },
        "properties" : {
          "KumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "Level2ProductSubCategories" : {
            "description" : "Related Level2 Product SubCategories",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "Level3ProductGroups" : {
            "description" : "Related Level3 Product Groups",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "ExcludeLevel2ProductSubCategories" : {
            "description" : "Level2 Product SubCategories which have to be excluded for kums",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          },
          "ExcludeLevel3ProductGroups" : {
            "description" : "Level3 Product Groups which have to be excluded for kums",
            "items" : {
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "LocationsRequest" : {
        "example" : {
          "searchString" : "searchString",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ],
          "takeNotHiddenOnMapOnly" : true
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging). If \"null\" then all records retrieved.",
            "format" : "int32",
            "minimum" : 1,
            "nullable" : true,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "nullable" : true,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns. Allowed are \"country\",\"postcode\",\"city\",\"street\" or empty",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          },
          "takeNotHiddenOnMapOnly" : {
            "description" : "take all or not hidden on map locations",
            "nullable" : true,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "LocationsWsRequest" : {
        "example" : {
          "advancedSearch" : [ {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          }, {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          } ],
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "advancedSearch" : {
            "description" : "Contains a list of parameters for advanced search",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedSearchItem"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "LocationsCountRequest" : {
        "example" : {
          "kumsIds" : [ "kumsIds", "kumsIds" ],
          "takeNotHiddenOnMapOnly" : true
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "takeNotHiddenOnMapOnly" : {
            "description" : "take all or not hidden on map locations",
            "nullable" : true,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "LocationRequest" : {
        "example" : {
          "locationId" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "locationId" : {
            "description" : "The location ID.",
            "maxLength" : 99999999,
            "minLength" : 0,
            "nullable" : true,
            "type" : "integer"
          }
        },
        "required" : [ "locationId" ],
        "type" : "object"
      },
      "UpdateLocationRequest" : {
        "example" : {
          "kumsId" : "kumsId",
          "locationName" : "locationName",
          "customerLocationId" : 6,
          "locationId" : 0,
          "isHiddenOnMap" : true
        },
        "properties" : {
          "kumsId" : {
            "description" : "The KUMS number of the customer.",
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "locationId" : {
            "description" : "The location ID in elastic search index",
            "format" : "int64",
            "maxLength" : 99999999,
            "minLength" : 0,
            "type" : "integer"
          },
          "customerLocationId" : {
            "description" : "The ID of Location Name in CustomerLocation table of external database",
            "format" : "int64",
            "maxLength" : 99999999,
            "minLength" : 0,
            "type" : "integer"
          },
          "locationName" : {
            "description" : "The customer defined name of the location",
            "maxLength" : 200,
            "minLength" : 1,
            "type" : "string"
          },
          "isHiddenOnMap" : {
            "description" : "Is location hidden on map",
            "nullable" : true,
            "type" : "boolean"
          }
        },
        "required" : [ "customerLocationId", "kumsId", "locationId" ],
        "type" : "object"
      },
      "ProductsByLocationRequest" : {
        "example" : {
          "locationId" : "locationId",
          "maincategoryFilter" : "maincategoryFilter",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "locationId" : {
            "description" : "The Id of the location",
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "maincategoryFilter" : {
            "description" : "adds the filter category for level 1, if empty filter is all",
            "maxLength" : 25,
            "type" : "string"
          }
        },
        "required" : [ "locationId" ],
        "type" : "object"
      },
      "ProductCategoriesRequest" : {
        "example" : {
          "groupFilter" : "groupFilter",
          "kumsIdFilters" : [ {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          }, {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          } ]
        },
        "properties" : {
          "kumsIdFilters" : {
            "description" : "The KUMS numbers of the customer + product filters.",
            "items" : {
              "$ref" : "#/components/schemas/KumsIdFilter"
            },
            "type" : "array"
          },
          "groupFilter" : {
            "description" : "Defines for which level 1 group the products should be filtered. Empty filter means for all groups",
            "maxLength" : 256,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ProductServicesRequest" : {
        "example" : {
          "rufnummer" : "rufnummer",
          "aonCustomerNumber" : "aonCustomerNumber",
          "vertragId" : "vertragId",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "vertragId" : {
            "description" : "Id of the contract.",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "rufnummer" : {
            "description" : "Subscriber phone number.",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "aonCustomerNumber" : {
            "description" : "The aon customernumber of the product.",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "rufnummer", "vertragId" ],
        "type" : "object"
      },
      "ProductsByNameAndAonCustomerNumber" : {
        "example" : {
          "aonCustomerNumber" : "aonCustomerNumber",
          "productSubCategory" : "productSubCategory",
          "productGroup" : "productGroup",
          "kumsIds" : [ "kumsIds", "kumsIds" ],
          "productMainCategory" : "productMainCategory"
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "productMainCategory" : {
            "description" : "The name of the Product Main Category (Level 1)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "productSubCategory" : {
            "description" : "The name of the Product Sub Category (Level 2)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "productGroup" : {
            "description" : "The name of the Product Group (Level 3)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "aonCustomerNumber" : {
            "description" : "The AON customer number",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "aonCustomerNumber", "maxResultCount", "productGroup", "productMainCategory", "productSubCategory", "skipCount" ],
        "type" : "object"
      },
      "ProductsByGroupRequest" : {
        "example" : {
          "searchString" : "searchString",
          "kumsIdFilters" : [ {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          }, {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          } ],
          "productSubCategory" : "productSubCategory",
          "productGroup" : [ "productGroup", "productGroup" ],
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "productMainCategory" : "productMainCategory"
        },
        "properties" : {
          "kumsIdFilters" : {
            "description" : "The KUMS numbers of the customer + product filters.",
            "items" : {
              "$ref" : "#/components/schemas/KumsIdFilter"
            },
            "type" : "array"
          },
          "productMainCategory" : {
            "description" : "The name of the Product Main Category (Level 1)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "productSubCategory" : {
            "description" : "The name of the Product Sub Category (Level 2)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "productGroup" : {
            "description" : "The list of names for the Product Group (Level 3)",
            "items" : {
              "maxLength" : 100,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 0,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "nullable" : true,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "nullable" : true,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns. Allowed are \"country\",\"postcode\",\"city\",\"street\",\"productname\",\"rufnummer\",\"aoncustomernumber\" or empty",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          }
        },
        "required" : [ "maxResultCount", "productGroup", "productMainCategory", "productSubCategory", "skipCount" ],
        "type" : "object"
      },
      "ProductsBySubCategoryRequest" : {
        "example" : {
          "searchString" : "searchString",
          "productSubCategory" : "productSubCategory",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ],
          "productMainCategory" : "productMainCategory"
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "productMainCategory" : {
            "description" : "The name of the Product Main Category (Level 1)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "productSubCategory" : {
            "description" : "The name of the Product Sub Category (Level 2)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "nullable" : true,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "nullable" : true,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns. Allowed are \"description\", \"country\",\"postcode\",\"city\",\"street\",\"productgroup\", \"productname\",\"rufnummer\",\"aoncustomernumber\" or empty",
            "maxLength" : 1000,
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "maxLength" : 1000,
            "type" : "string"
          }
        },
        "required" : [ "maxResultCount", "productMainCategory", "productSubCategory", "skipCount" ],
        "type" : "object"
      },
      "HasHcsProductRequest" : {
        "example" : {
          "kumsIdFilters" : [ {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          }, {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          } ]
        },
        "properties" : {
          "kumsIdFilters" : {
            "description" : "The KUMS numbers of the customer + product filters.",
            "items" : {
              "$ref" : "#/components/schemas/KumsIdFilter"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "MplsDetailsRequest" : {
        "example" : {
          "aonCustomerNumber" : "aonCustomerNumber",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "aonCustomerNumber" : {
            "description" : "The AON customer number that belongs to a certain product",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "string"
          },
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "aonCustomerNumber" ],
        "type" : "object"
      },
      "ProductsWithLocationsRequest" : {
        "example" : {
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ],
          "takeNotHiddenOnMapOnly" : true,
          "level2ProductSubCategories" : [ "level2ProductSubCategories", "level2ProductSubCategories" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "nullable" : true,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "nullable" : true,
            "type" : "integer"
          },
          "takeNotHiddenOnMapOnly" : {
            "description" : "take all or not hidden on map locations",
            "nullable" : true,
            "type" : "boolean"
          },
          "level2ProductSubCategories" : {
            "description" : "Level2 Product SubCategories.",
            "items" : {
              "maxLength" : 10,
              "type" : "string"
            },
            "type" : "array"
          }
        },
        "type" : "object"
      },
      "ProductsForSubscriptionRequest" : {
        "example" : {
          "callNumber" : {
            "CC" : "CC",
            "SN" : "SN",
            "NDC" : "NDC"
          },
          "stopWordsFilteringEnabled" : true,
          "productOfferingFilteringEnabled" : true
        },
        "properties" : {
          "callNumber" : {
            "$ref" : "#/components/schemas/CallNumber"
          },
          "stopWordsFilteringEnabled" : {
            "description" : "True if display only for playground (kums impersonated) users, false if for all users",
            "nullable" : true,
            "type" : "boolean"
          },
          "productOfferingFilteringEnabled" : {
            "description" : "True if display for external user or user impersonation",
            "nullable" : true,
            "type" : "boolean"
          }
        },
        "required" : [ "callNumber" ],
        "type" : "object"
      },
      "GetGrantedKumsForMonitoringProductRequest" : {
        "example" : {
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetGrantedKumsForDataCenterProductRequest" : {
        "example" : {
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetMarketplaceProductDetailsRequest" : {
        "example" : {
          "productGroup" : "productGroup",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "productGroup" : {
            "description" : "The name of the Product Group (Level 3)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "NumberingServiceProductDetailsRequest" : {
        "example" : {
          "searchString" : "searchString",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns. Allowed are \"productname\",\"rufnummer\",\"all\" or empty",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          }
        },
        "type" : "object"
      },
      "NumberingServiceProductAdvancedSearchRequest" : {
        "example" : {
          "advancedSearch" : [ {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          }, {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          } ],
          "sorting" : "sorting",
          "isInternalUser" : true,
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "sorting" : {
            "description" : "Sorting information that has been applied to the result set (e.g. 'Field1 ASC, Field2 DESC').",
            "type" : "string"
          },
          "advancedSearch" : {
            "description" : "Contains a list of parameters for advanced search",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedSearchItem"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "isInternalUser" : {
            "description" : "additional filter for CA/ICA-segmented",
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "LicenseProductDetailsRequest" : {
        "example" : {
          "searchString" : "searchString",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns. Allowed are \"country\",\"postcode\",\"city\",\"street\",\"productname\",\"rufnummer\",\"aoncustomernumber\" or empty",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetCustomerMarketplaceSubscriptionsRequest" : {
        "example" : {
          "kumsId" : "kumsId",
          "productGroup" : "productGroup"
        },
        "properties" : {
          "kumsId" : {
            "description" : "The KUMS number of the customer.",
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "productGroup" : {
            "description" : "The name of the Product Group (Level 3)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetTusResellerProductDetailsRequest" : {
        "example" : {
          "aonCustomerNumber" : "aonCustomerNumber",
          "mplsAccessLineType" : "mplsAccessLineType",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "mplsAccessLineType" : {
            "description" : "Type of access line (TUSR, TUSB, TUSM). Part of EOL_DIENSTLEISTUNG",
            "type" : "string"
          },
          "aonCustomerNumber" : {
            "description" : "The AON customer number that belongs to a certain product",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "string"
          },
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "aonCustomerNumber", "mplsAccessLineType" ],
        "type" : "object"
      },
      "GetAvailableAccessLinesRequest" : {
        "example" : {
          "aonCustomerNumber" : "aonCustomerNumber",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "aonCustomerNumber" : {
            "description" : "The AON customer number that belongs to a certain product",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "string"
          },
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "aonCustomerNumber" ],
        "type" : "object"
      },
      "GetTusZielerweiterungProductDetailsRequest" : {
        "example" : {
          "openNetAccount" : "openNetAccount"
        },
        "properties" : {
          "openNetAccount" : {
            "description" : "The AON customer number that belongs to a certain product",
            "maxLength" : 30,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "openNetAccount" ],
        "type" : "object"
      },
      "GetExternalSlaCodesRequest" : {
        "example" : {
          "slaCodes" : [ "slaCodes", "slaCodes" ]
        },
        "properties" : {
          "slaCodes" : {
            "description" : "Internal SLA code",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "slaCodes" ],
        "type" : "object"
      },
      "GetProductsLevel2ByLocationsRequest" : {
        "example" : {
          "locationIds" : [ "locationIds", "locationIds" ],
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "locationIds" : {
            "description" : "List of locations",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetProductDetailsExportConfigRequest" : {
        "example" : {
          "isForExternal" : true,
          "productSubCategory" : "productSubCategory",
          "productGroup" : "productGroup",
          "productMainCategory" : "productMainCategory"
        },
        "properties" : {
          "isForExternal" : {
            "description" : "If true - get only 'VisibleForExternal' columns. if 'false' - get all columns",
            "nullable" : true,
            "type" : "boolean"
          },
          "productMainCategory" : {
            "description" : "The level1 category for which the columns shall be returned",
            "type" : "string"
          },
          "productSubCategory" : {
            "description" : "The level2 category for which the columns shall be returned",
            "type" : "string"
          },
          "productGroup" : {
            "description" : "The level3 category for which the columns shall be returned",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetTusEquipmentsRequest" : {
        "example" : {
          "searchString" : "searchString",
          "callNumber" : "callNumber",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "callNumber" : {
            "description" : "The aon customernumber of the Tus Inventar",
            "maxLength" : 100,
            "type" : "string"
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns. Allowed are \"Type\",\"All\" or empty",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for",
            "type" : "string"
          }
        },
        "required" : [ "kumsIds" ],
        "type" : "object"
      },
      "MobileProductDetailsRequest" : {
        "example" : {
          "searchString" : "searchString",
          "productSubCategory" : "productSubCategory",
          "productGroup" : "productGroup",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ],
          "productMainCategory" : "productMainCategory"
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "productMainCategory" : {
            "description" : "The name of the Product Main Category (Level 1)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "productSubCategory" : {
            "description" : "The name of the Product Sub Category (Level 2)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "productGroup" : {
            "description" : "The name of the Product Group (Level 3)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "nullable" : true,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "nullable" : true,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns.",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          }
        },
        "required" : [ "productMainCategory", "productSubCategory" ],
        "type" : "object"
      },
      "DeviceAsAServiceRequest" : {
        "example" : {
          "searchString" : "searchString",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns.",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PaymentProductDetailsRequest" : {
        "example" : {
          "searchString" : "searchString",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns.",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PortalsRequest" : {
        "example" : {
          "isForPortalTab" : true,
          "productLevel1Category" : "productLevel1Category",
          "kumsIdFilters" : [ {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          }, {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          } ],
          "productLevel3Category" : "productLevel3Category"
        },
        "properties" : {
          "kumsIdFilters" : {
            "description" : "The KUMS numbers of the customer + product filters.",
            "items" : {
              "$ref" : "#/components/schemas/KumsIdFilter"
            },
            "type" : "array"
          },
          "productLevel3Category" : {
            "description" : "The level3 category of the products for which the generic portals shall be returned",
            "type" : "string"
          },
          "isForPortalTab" : {
            "description" : "Get portals for portal tiles",
            "type" : "boolean"
          },
          "productLevel1Category" : {
            "description" : "The level1 category of the products for which the generic portals shall be returned",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "PortalsBySubCategoryRequest" : {
        "example" : {
          "kumsIdFilters" : [ {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          }, {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          } ],
          "productSubCategory" : "productSubCategory",
          "productMainCategory" : "productMainCategory"
        },
        "properties" : {
          "kumsIdFilters" : {
            "description" : "The KUMS numbers of the customer + product filters.",
            "items" : {
              "$ref" : "#/components/schemas/KumsIdFilter"
            },
            "type" : "array"
          },
          "productMainCategory" : {
            "description" : "The name of the Product Main Category (Level 1)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          },
          "productSubCategory" : {
            "description" : "The name of the Product Sub Category (Level 2)",
            "maxLength" : 100,
            "minLength" : 1,
            "type" : "string"
          }
        },
        "required" : [ "productMainCategory", "productSubCategory" ],
        "type" : "object"
      },
      "ServicePortalsRequest" : {
        "example" : {
          "Type" : "All",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "Type" : {
            "enum" : [ "All", "ForCostsTab", "ForPortalsTab" ],
            "type" : "string"
          }
        },
        "required" : [ "Type", "kumsIds" ],
        "type" : "object"
      },
      "PortalRequest" : {
        "example" : {
          "portalUid" : "portalUid",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "portalUid" : {
            "description" : "Portal uid to get detailed info",
            "type" : "string"
          }
        },
        "required" : [ "portalUid" ],
        "type" : "object"
      },
      "ServicePortalRequest" : {
        "example" : {
          "portalUid" : "portalUid",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "type" : "array",
            "uniqueItems" : true
          },
          "portalUid" : {
            "description" : "Portal uid to get detailed info",
            "type" : "string"
          }
        },
        "required" : [ "portalUid" ],
        "type" : "object"
      },
      "GetAllProductsDocumentsRequest" : {
        "example" : {
          "level3ProductsGroups" : [ {
            "Level3Products" : [ "Level3Products", "Level3Products" ],
            "GroupId" : "GroupId"
          }, {
            "Level3Products" : [ "Level3Products", "Level3Products" ],
            "GroupId" : "GroupId"
          } ],
          "kumsIdFilters" : [ {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          }, {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          } ]
        },
        "properties" : {
          "level3ProductsGroups" : {
            "description" : "Collection of level 3 product groups names for document download",
            "items" : {
              "$ref" : "#/components/schemas/Level3ProductsGroup"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "kumsIdFilters" : {
            "description" : "The KUMS numbers of the customer + product filters.",
            "items" : {
              "$ref" : "#/components/schemas/KumsIdFilter"
            },
            "type" : "array"
          }
        },
        "required" : [ "level3ProductsGroups" ],
        "type" : "object"
      },
      "GetProductDocumentFileRequest" : {
        "example" : {
          "fileName" : "fileName",
          "productGroups" : [ "productGroups", "productGroups" ]
        },
        "properties" : {
          "fileName" : {
            "description" : "File name to download",
            "maxLength" : 200,
            "type" : "string"
          },
          "productGroups" : {
            "description" : "Available product group names for document download",
            "items" : {
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "fileName", "productGroups" ],
        "type" : "object"
      },
      "GetDataProductsOverviewRequest" : {
        "example" : {
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetDataProductsRequest" : {
        "example" : {
          "advancedSearch" : [ {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          }, {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          } ],
          "sorting" : "sorting",
          "productTypeFilter" : "productTypeFilter",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging). If \"null\" then all records retrieved.",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "sorting" : {
            "description" : "Sorting information that has been applied to the result set (e.g. 'Field1 ASC, Field2 DESC').",
            "type" : "string"
          },
          "advancedSearch" : {
            "description" : "Contains a list of parameters for advanced search",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedSearchItem"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "productTypeFilter" : {
            "description" : "Product Type Filter",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetDataProductsCountRequest" : {
        "example" : {
          "advancedSearch" : [ {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          }, {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          } ],
          "productTypeFilter" : "productTypeFilter",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "productTypeFilter" : {
            "description" : "Product Type Filter",
            "type" : "string"
          },
          "advancedSearch" : {
            "description" : "Contains a list of parameters for advanced search",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedSearchItem"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetDataProductsSearchableColumnsRequest" : {
        "example" : {
          "productTypeFilter" : "productTypeFilter"
        },
        "properties" : {
          "productTypeFilter" : {
            "description" : "Product Type Filter",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetDataProductDetailsRequest" : {
        "example" : {
          "kumsId" : "kumsId",
          "lineNumber" : "lineNumber"
        },
        "properties" : {
          "kumsId" : {
            "description" : "The KUMS number of the customer.",
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "lineNumber" : {
            "description" : "The Line number of the product.",
            "type" : "string"
          }
        },
        "required" : [ "kumsId", "lineNumber" ],
        "type" : "object"
      },
      "GetAddressesDetailsRequest" : {
        "example" : {
          "isLocationA" : true,
          "locationId" : "locationId",
          "advancedSearch" : [ {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          }, {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          } ],
          "sorting" : "sorting",
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "locationId" : {
            "description" : "The Id of location",
            "type" : "string",
            "uniqueItems" : true
          },
          "sorting" : {
            "description" : "Sorting information that has been applied to the result set (e.g. 'Field1 ASC, Field2 DESC').",
            "type" : "string"
          },
          "isLocationA" : {
            "description" : "isLocationA",
            "nullable" : true,
            "type" : "boolean",
            "uniqueItems" : false
          },
          "advancedSearch" : {
            "description" : "Contains a list of parameters for advanced search",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedSearchItem"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "required" : [ "isLocationA", "kumsIds", "locationId" ],
        "type" : "object"
      },
      "GetAddressesByKumsListRequest" : {
        "example" : {
          "advancedSearch" : [ {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          }, {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          } ],
          "sorting" : "sorting",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging). If \"null\" then all records retrieved.",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "sorting" : {
            "description" : "Sorting information that has been applied to the result set (e.g. 'Field1 ASC, Field2 DESC').",
            "type" : "string"
          },
          "advancedSearch" : {
            "description" : "Contains a list of parameters for advanced search",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedSearchItem"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "AddressesCountRequest" : {
        "example" : {
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetPscListRequest" : {
        "example" : {
          "searchString" : "searchString",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0
        },
        "properties" : {
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging). If \"null\" then all records retrieved.",
            "format" : "int32",
            "minimum" : 1,
            "nullable" : true,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "nullable" : true,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns. Allowed are \"name\",\"detail\" or empty",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "SetPscvVisibilityRequest" : {
        "example" : {
          "pscvId" : "pscvId",
          "isVisible" : true
        },
        "properties" : {
          "pscvId" : {
            "description" : "ProductSpecCharacteristicId",
            "type" : "string"
          },
          "isVisible" : {
            "description" : "True - PSCV should be visible, False - not visible",
            "nullable" : true,
            "type" : "boolean"
          }
        },
        "type" : "object"
      },
      "BillingInvoicesAdvancedSearchRequest" : {
        "example" : {
          "advancedSearch" : [ {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          }, {
            "FieldName" : "FieldName",
            "SearchValues" : [ "SearchValues", "SearchValues" ]
          } ],
          "sorting" : "sorting",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "sorting" : {
            "description" : "Sorting information that has been applied to the result set (e.g. 'Field1 ASC, Field2 DESC').",
            "type" : "string"
          },
          "advancedSearch" : {
            "description" : "Contains a list of parameters for advanced search",
            "items" : {
              "$ref" : "#/components/schemas/AdvancedSearchItem"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        },
        "type" : "object"
      },
      "GetBillingInvoiceFileRequest" : {
        "example" : {
          "invoiceNumber" : "invoiceNumber"
        },
        "properties" : {
          "invoiceNumber" : {
            "description" : "Invoice number",
            "maxLength" : 20,
            "type" : "string"
          }
        },
        "required" : [ "invoiceNumber" ],
        "type" : "object"
      },
      "VirtualFirewallListRequest" : {
        "example" : {
          "searchString" : "searchString",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0,
          "kumsIds" : [ "kumsIds", "kumsIds" ]
        },
        "properties" : {
          "kumsIds" : {
            "description" : "The KUMS numbers of the customer.",
            "items" : {
              "maxLength" : 20,
              "minLength" : 1,
              "type" : "string"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging).",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns.",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "ValidateWebAcNumberRequest" : {
        "example" : {
          "webAcNumber" : "webAcNumber"
        },
        "properties" : {
          "webAcNumber" : {
            "description" : "WebAc Number",
            "type" : "string"
          }
        },
        "required" : [ "webAcNumber" ],
        "type" : "object"
      },
      "GetEtherlinkRequest" : {
        "example" : {
          "searchString" : "searchString",
          "kumsIdFilters" : [ {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          }, {
            "Level3ProductGroups" : [ "Level3ProductGroups", "Level3ProductGroups" ],
            "ExcludeLevel3ProductGroups" : [ "ExcludeLevel3ProductGroups", "ExcludeLevel3ProductGroups" ],
            "Level2ProductSubCategories" : [ "Level2ProductSubCategories", "Level2ProductSubCategories" ],
            "ExcludeLevel2ProductSubCategories" : [ "ExcludeLevel2ProductSubCategories", "ExcludeLevel2ProductSubCategories" ],
            "KumsIds" : [ "KumsIds", "KumsIds" ]
          } ],
          "sorting" : "sorting",
          "searchProfileName" : "searchProfileName",
          "maxResultCount" : 1,
          "skipCount" : 0
        },
        "properties" : {
          "kumsIdFilters" : {
            "description" : "The KUMS numbers of the customer + product filters.",
            "items" : {
              "$ref" : "#/components/schemas/KumsIdFilter"
            },
            "type" : "array"
          },
          "maxResultCount" : {
            "description" : "Maximum number of results to be returned (by paging). If \"null\" then all records retrieved.",
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "skipCount" : {
            "description" : "Number of results to be skipped (by paging).",
            "format" : "int32",
            "minimum" : 0,
            "type" : "integer"
          },
          "sorting" : {
            "description" : "Sorting information that has been applied to the result set (e.g. 'Field1 ASC, Field2 DESC').",
            "type" : "string"
          },
          "searchProfileName" : {
            "description" : "defines the column in which we can search, null means all columns.",
            "type" : "string"
          },
          "searchString" : {
            "description" : "defines the string that should be searched for. Using a contains query",
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "GetEtherlinkDetailsRequest" : {
        "example" : {
          "kumsId" : "kumsId",
          "lineId" : "lineId",
          "lineNumber" : "lineNumber"
        },
        "properties" : {
          "kumsId" : {
            "description" : "The KUMS number of the customer.",
            "maxLength" : 20,
            "minLength" : 1,
            "type" : "string"
          },
          "lineNumber" : {
            "description" : "The Line number of the product.",
            "type" : "string"
          },
          "lineId" : {
            "description" : "The LineId of the product.",
            "type" : "string"
          }
        },
        "required" : [ "kumsId", "lineId", "lineNumber" ],
        "type" : "object"
      }
    }
  }
}
