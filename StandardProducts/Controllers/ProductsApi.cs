/*
 * Customer Locations and Products API of MyEnterprise
 *
 * Reads customer locations and products
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using StandardProducts.Attributes;
using StandardProducts.Models;
using Swashbuckle.AspNetCore.Annotations;
using System.ComponentModel.DataAnnotations;
using System.Threading.Tasks;
using ProblemDetails = StandardProducts.Models.ProblemDetails;

namespace StandardProducts.Controllers {

    public class ProductsApiController : Controller {
        private readonly IProductsController _implementation;

        public ProductsApiController(IProductsController productsController) {
            _implementation = productsController;
        }
        /// <summary>
        /// Returns information about availible access lines
        /// </summary>
        /// <remarks>Returns information about availible access lines</remarks>
        /// <param name="getAvailableAccessLinesRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetAvailableAccessLines")]
        [ValidateModelState]
        [SwaggerOperation("GetAvailableAccessLinesPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(AvailableAccessLinesResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetAvailableAccessLinesPost([FromBody]GetAvailableAccessLinesRequest getAvailableAccessLinesRequest) {
            return new ObjectResult(await _implementation.GetAvailableAccessLinesPostAsync(getAvailableAccessLinesRequest));
        }

        /// <summary>
        /// Gets list of marketplace product subscriptions for given KUMS
        /// </summary>
        /// <remarks>Gets list of  marketplace product subscriptions for given KUMS</remarks>
        /// <param name="getCustomerMarketplaceSubscriptionsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetCustomerMarketplaceSubscriptions")]
        [ValidateModelState]
        [SwaggerOperation("GetCustomerMarketplaceSubscriptionsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetCustomerMarketplaceSubscriptionsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetCustomerMarketplaceSubscriptionsPost([FromBody]GetCustomerMarketplaceSubscriptionsRequest getCustomerMarketplaceSubscriptionsRequest) {
            return new ObjectResult(await _implementation.GetCustomerMarketplaceSubscriptionsPostAsync(getCustomerMarketplaceSubscriptionsRequest));
        }

        /// <summary>
        /// Get Etherlink product details by KumsId and LineNumber
        /// </summary>
        /// <remarks>Get Etherlink product details by KumsId and LineNumber</remarks>
        /// <param name="getEtherlinkDetailsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetEtherlinkProductDetails")]
        [ValidateModelState]
        [SwaggerOperation("GetEtherlinkProductDetailsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(DataProduct), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetEtherlinkProductDetailsPost([FromBody]GetEtherlinkDetailsRequest getEtherlinkDetailsRequest) {
            return new ObjectResult(await _implementation.GetEtherlinkProductDetailsPostAsync(getEtherlinkDetailsRequest));
        }

        /// <summary>
        /// Get list of Etherlink
        /// </summary>
        /// <remarks>Get sorted, paged list of Etherlink. Allow searching</remarks>
        /// <param name="getEtherlinkRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetEtherlinkProducts")]
        [ValidateModelState]
        [SwaggerOperation("GetEtherlinkProductsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(DataProductsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetEtherlinkProductsPost([FromBody]GetEtherlinkRequest getEtherlinkRequest) {
            return new ObjectResult(await _implementation.GetEtherlinkProductsPostAsync(getEtherlinkRequest));
        }

        /// <summary>
        /// Returns clear text corresponding to internal SLA code. If no mapping exists then returns the input value
        /// </summary>
        /// <remarks>Returns clear text corresponding to internal SLA code. If no mapping exists then returns the input value</remarks>
        /// <param name="getExternalSlaCodesRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetExternalSlaCodes")]
        [ValidateModelState]
        [SwaggerOperation("GetExternalSlaCodesPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ExternalSlaCodes), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetExternalSlaCodesPost([FromBody]GetExternalSlaCodesRequest getExternalSlaCodesRequest) {
            return new ObjectResult(await _implementation.GetExternalSlaCodesPostAsync(getExternalSlaCodesRequest));
        }

        /// <summary>
        /// Gets KUMs numbers granted for managed DataCenter
        /// </summary>
        /// <remarks>Returns corresponding kums which have a managedDataCenter</remarks>
        /// <param name="getGrantedKumsForDataCenterProductRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetGrantedKumsForDataCenterProduct")]
        [ValidateModelState]
        [SwaggerOperation("GetGrantedKumsForDataCenterProductPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetGrantedKumsForDataCenterResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetGrantedKumsForDataCenterProductPost([FromBody]GetGrantedKumsForDataCenterProductRequest getGrantedKumsForDataCenterProductRequest) {
            return new ObjectResult(await _implementation.GetGrantedKumsForDataCenterProductPostAsync(getGrantedKumsForDataCenterProductRequest));
        }

        /// <summary>
        /// Gets KUMs numbers granted for monitoring product
        /// </summary>
        /// <remarks>Returns corresponding kums which have a monitoring product</remarks>
        /// <param name="getGrantedKumsForMonitoringProductRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetGrantedKumsForMonitoringProduct")]
        [ValidateModelState]
        [SwaggerOperation("GetGrantedKumsForMonitoringProductPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetGrantedKumsForMonitoringProductResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetGrantedKumsForMonitoringProductPost([FromBody]GetGrantedKumsForMonitoringProductRequest getGrantedKumsForMonitoringProductRequest) {
            return new ObjectResult(await _implementation.GetGrantedKumsForMonitoringProductPostAsync(getGrantedKumsForMonitoringProductRequest));
        }

        /// <summary>
        /// Gets list of BAN&#39;s for list of given KUMS&#39;s
        /// </summary>
        /// <remarks>Gets list of BAN&#39;s for list of given KUMS&#39;s</remarks>
        /// <param name="getMarketplaceProductDetailsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetMarketplaceProductDetails")]
        [ValidateModelState]
        [SwaggerOperation("GetMarketplaceProductDetailsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetMarketplaceProductDetailsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetMarketplaceProductDetailsPost([FromBody]GetMarketplaceProductDetailsRequest getMarketplaceProductDetailsRequest) {
            return new ObjectResult(await _implementation.GetMarketplaceProductDetailsPostAsync(getMarketplaceProductDetailsRequest));
        }

        /// <summary>
        /// Returns list of columns that can be included into details report
        /// </summary>
        /// <remarks>Returns list of columns that can be included into details report</remarks>
        /// <param name="getProductDetailsExportConfigRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetProductDetailsExportConfig")]
        [ValidateModelState]
        [SwaggerOperation("GetProductDetailsExportConfigPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetProductDetailsExportConfigResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetProductDetailsExportConfigPost([FromBody]GetProductDetailsExportConfigRequest getProductDetailsExportConfigRequest) {
            return new ObjectResult(await _implementation.GetProductDetailsExportConfigPostAsync(getProductDetailsExportConfigRequest));
        }

        /// <summary>
        /// Returns list of existing Level_2_ProductSubCategory for each kums-locationId pair
        /// </summary>
        /// <remarks>Returns list of existing Level_2_ProductSubCategory for each kums-locationId pair</remarks>
        /// <param name="getProductsLevel2ByLocationsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetProductsLevel2ByLocations")]
        [ValidateModelState]
        [SwaggerOperation("GetProductsLevel2ByLocationsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetProductsLevel2ByLocationsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetProductsLevel2ByLocationsPost([FromBody]GetProductsLevel2ByLocationsRequest getProductsLevel2ByLocationsRequest) {
            return new ObjectResult(await _implementation.GetProductsLevel2ByLocationsPostAsync(getProductsLevel2ByLocationsRequest));
        }

        /// <summary>
        /// Returns list of equipments for Tus products
        /// </summary>
        /// <remarks>Returns list of equipments for Tus products</remarks>
        /// <param name="getTusEquipmentsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetTusEquipment")]
        [ValidateModelState]
        [SwaggerOperation("GetTusEquipmentPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(GetTusEquipmentsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetTusEquipmentPost([FromBody]GetTusEquipmentsRequest getTusEquipmentsRequest) {
            return new ObjectResult(await _implementation.GetTusEquipmentPostAsync(getTusEquipmentsRequest));
        }

        /// <summary>
        /// Returns detailed information about a TuS Reseller product
        /// </summary>
        /// <remarks>The endpoint returns a non paged object that contains all information about the TuS Reseller product, received by elastic search queries</remarks>
        /// <param name="getTusResellerProductDetailsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetTusResellerProductDetails")]
        [ValidateModelState]
        [SwaggerOperation("GetTusResellerProductDetailsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(TusResellerProductDetailsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetTusResellerProductDetailsPost([FromBody]GetTusResellerProductDetailsRequest getTusResellerProductDetailsRequest) {
            return new ObjectResult(await _implementation.GetTusResellerProductDetailsPostAsync(getTusResellerProductDetailsRequest));
        }

        /// <summary>
        /// Returns information about A1 Object security Transmission Service (level3) products except TuS Reseller (level4) product
        /// </summary>
        /// <remarks>The endpoint returns a non paged object that contains all information about A1 Object security Transmission Service (level3) products except TuS Reseller (level4) product, received by elastic search queries</remarks>
        /// <param name="getTusZielerweiterungProductDetailsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/GetTusZielerweiterungProductDetails")]
        [ValidateModelState]
        [SwaggerOperation("GetTusZielerweiterungProductDetailsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(TusZielerweiterungProductDetailsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> GetTusZielerweiterungProductDetailsPost([FromBody]GetTusZielerweiterungProductDetailsRequest getTusZielerweiterungProductDetailsRequest) {
            return new ObjectResult(await _implementation.GetTusZielerweiterungProductDetailsPostAsync(getTusZielerweiterungProductDetailsRequest));
        }

        /// <summary>
        /// Has an HCS product for KUMS
        /// </summary>
        /// <remarks>the method checks if the customer has an HCS product</remarks>
        /// <param name="hasHcsProductRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/HasHcsProduct")]
        [ValidateModelState]
        [SwaggerOperation("HasHcsProductPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(HasHcsProductResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> HasHcsProductPost([FromBody]HasHcsProductRequest hasHcsProductRequest) {
            return new ObjectResult(await _implementation.HasHcsProductPostAsync(hasHcsProductRequest));
        }

        /// <summary>
        /// Gets list of licenses
        /// </summary>
        /// <remarks>Gets list of licenses for list of given KUMS&#39;s</remarks>
        /// <param name="licenseProductDetailsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/LicenseProductDetails")]
        [ValidateModelState]
        [SwaggerOperation("LicenseProductDetailsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(LicenseProductDetailsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> LicenseProductDetailsPost([FromBody]LicenseProductDetailsRequest licenseProductDetailsRequest) {
            return new ObjectResult(await _implementation.LicenseProductDetailsPostAsync(licenseProductDetailsRequest));
        }

        /// <summary>
        /// Returns detailed information about an MPLS product
        /// </summary>
        /// <remarks>The MplsDetails endpoint returns a non paged object that contains all information about the MPLS product, received by elastic search queries</remarks>
        /// <param name="mplsDetailsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/MplsDetails")]
        [ValidateModelState]
        [SwaggerOperation("MplsDetailsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(MPLSDetails), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> MplsDetailsPost([FromBody]MplsDetailsRequest mplsDetailsRequest) {
            return new ObjectResult(await _implementation.MplsDetailsPostAsync(mplsDetailsRequest));
        }

        /// <summary>
        /// Gets list of numbering services with advancedsearch
        /// </summary>
        /// <remarks>Gets list of numbering services for list of given KUMS&#39;s</remarks>
        /// <param name="numberingServiceProductAdvancedSearchRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/NumberingServiceProductAdvancedSearch")]
        [ValidateModelState]
        [SwaggerOperation("NumberingServiceProductAdvancedSearchPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(NumberingServiceProductDetailsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> NumberingServiceProductAdvancedSearchPost([FromBody]NumberingServiceProductAdvancedSearchRequest numberingServiceProductAdvancedSearchRequest) {
            return new ObjectResult(await _implementation.NumberingServiceProductAdvancedSearchPostAsync(numberingServiceProductAdvancedSearchRequest));
        }

        /// <summary>
        /// Gets list of numbering services
        /// </summary>
        /// <remarks>Gets list of numbering services for list of given KUMS&#39;s</remarks>
        /// <param name="numberingServiceProductDetailsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/NumberingServiceProductDetails")]
        [ValidateModelState]
        [SwaggerOperation("NumberingServiceProductDetailsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(NumberingServiceProductDetailsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> NumberingServiceProductDetailsPost([FromBody]NumberingServiceProductDetailsRequest numberingServiceProductDetailsRequest) {
            return new ObjectResult(await _implementation.NumberingServiceProductDetailsPostAsync(numberingServiceProductDetailsRequest));
        }

        /// <summary>
        /// Visibility of &#39;Show all&#39; link for some Product Categories
        /// </summary>
        /// <remarks>The ProductCategoriesAllLinkVisibility endpoint returns the list of all Models with ProductMainCategory and ProductSubCategory for which &#39;Show all&#39; link  should be disabled</remarks>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpGet]
        [Route("/api/StandardProducts/ProductCategoriesAllLinkVisibility")]
        [ValidateModelState]
        [SwaggerOperation("ProductCategoriesAllLinkVisibilityGet")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductCategoriesAllLinkVisibilityResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductCategoriesAllLinkVisibilityGet() {
            return new ObjectResult(await _implementation.ProductCategoriesAllLinkVisibilityGetAsync());
        }

        /// <summary>
        /// Product Categories of Products enabled for certain KUMS numbers
        /// </summary>
        /// <remarks>The ProductCategories endpoint returns the list of all Product Categories that are enabled for customer KUMS numbers</remarks>
        /// <param name="productCategoriesRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/ProductCategories")]
        [ValidateModelState]
        [SwaggerOperation("ProductCategoriesPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductCategoriesResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductCategoriesPost([FromBody]ProductCategoriesRequest productCategoriesRequest) {
            return new ObjectResult(await _implementation.ProductCategoriesPostAsync(productCategoriesRequest));
        }

        /// <summary>
        /// All Services related to given VertragId, Rufnummer and AonKundennummerId
        /// </summary>
        /// <remarks>The ProductServices endpoint returns the list of services related to given VertragId, Rufnummer and AonKundennummerId</remarks>
        /// <param name="productServicesRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/ProductServices")]
        [ValidateModelState]
        [SwaggerOperation("ProductServicesPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductServicesResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductServicesPost([FromBody]ProductServicesRequest productServicesRequest) {
            return new ObjectResult(await _implementation.ProductServicesPostAsync(productServicesRequest));
        }

        /// <summary>
        /// All Products contained in a Product Group for certain KUMS numbers
        /// </summary>
        /// <remarks>The ProductsByGroup endpoint returns the list of all Products contained in a certain Product Group that are enabled for customer KUMS numbers</remarks>
        /// <param name="productsByGroupRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/ProductsByGroup")]
        [ValidateModelState]
        [SwaggerOperation("ProductsByGroupPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductsByGroupResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductsByGroupPost([FromBody]ProductsByGroupRequest productsByGroupRequest) {
            return new ObjectResult(await _implementation.ProductsByGroupPostAsync(productsByGroupRequest));
        }

        /// <summary>
        /// Returns a list of Products for a loation
        /// </summary>
        /// <remarks>The locations endpoint returns the list of Products for certain customer KUMS numbers</remarks>
        /// <param name="productsByLocationRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/ProductsByLocation")]
        [ValidateModelState]
        [SwaggerOperation("ProductsByLocationPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductForLocationResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductsByLocationPost([FromBody]ProductsByLocationRequest productsByLocationRequest) {
            return new ObjectResult(await _implementation.ProductsByLocationPostAsync(productsByLocationRequest));
        }

        /// <summary>
        /// returns the product for a certain name and aon customer number
        /// </summary>
        /// <remarks>returns the product for a certain name and aon customer number</remarks>
        /// <param name="productsByNameAndAonCustomerNumber"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/ProductsByNameAndAonCustomerNumber")]
        [ValidateModelState]
        [SwaggerOperation("ProductsByNameAndAonCustomerNumberPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductDetail), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductsByNameAndAonCustomerNumberPost([FromBody]ProductsByNameAndAonCustomerNumber productsByNameAndAonCustomerNumber) {
            return new ObjectResult(await _implementation.ProductsByNameAndAonCustomerNumberPostAsync(productsByNameAndAonCustomerNumber));
        }

        /// <summary>
        /// All Products contained in a Product SubCategory for certain KUMS numbers
        /// </summary>
        /// <remarks>The ProductsBySubCategory endpoint returns the list of all Products contained in a certain Product SubCategory that are enabled for customer KUMS numbers</remarks>
        /// <param name="productsBySubCategoryRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/ProductsBySubCategory")]
        [ValidateModelState]
        [SwaggerOperation("ProductsBySubCategoryPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductsBySubCategoryResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductsBySubCategoryPost([FromBody]ProductsBySubCategoryRequest productsBySubCategoryRequest) {
            return new ObjectResult(await _implementation.ProductsBySubCategoryPostAsync(productsBySubCategoryRequest));
        }

        /// <summary>
        /// Products for subscription by call number
        /// </summary>
        /// <remarks>the method returns single subscription with products</remarks>
        /// <param name="productsForSubscriptionRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/ProductsForSubscription")]
        [ValidateModelState]
        [SwaggerOperation("ProductsForSubscriptionPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductsForSubscriptionResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductsForSubscriptionPost([FromBody]ProductsForSubscriptionRequest productsForSubscriptionRequest) {
            return new ObjectResult(await _implementation.ProductsForSubscriptionPostAsync(productsForSubscriptionRequest));
        }

        /// <summary>
        /// Returns detailed information about products
        /// </summary>
        /// <remarks>The ProductsWithLocations endpoint returns a paged object that contains all information about all products</remarks>
        /// <param name="productsWithLocationsRequest"></param>
        /// <response code="200">Success</response>
        /// <response code="400">Bad Request e.g. validation error shows data issues</response>
        /// <response code="415">Non-parseable request/response</response>
        /// <response code="500">Internal server error</response>
        /// <response code="503">Connection failure</response>
        /// <response code="504">External interface timed out</response>
        /// <response code="0">Unexpected error</response>
        [HttpPost]
        [Route("/api/StandardProducts/ProductsWithLocations")]
        [ValidateModelState]
        [SwaggerOperation("ProductsWithLocationsPost")]
        [SwaggerResponse(statusCode: 200, type: typeof(ProductsWithLocationsResult), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(ProblemDetails), description: "Bad Request e.g. validation error shows data issues")]
        [SwaggerResponse(statusCode: 415, type: typeof(ProblemDetails), description: "Non-parseable request/response")]
        [SwaggerResponse(statusCode: 500, type: typeof(ProblemDetails), description: "Internal server error")]
        [SwaggerResponse(statusCode: 503, type: typeof(ProblemDetails), description: "Connection failure")]
        [SwaggerResponse(statusCode: 504, type: typeof(ProblemDetails), description: "External interface timed out")]
        [SwaggerResponse(statusCode: 0, type: typeof(ProblemDetails), description: "Unexpected error")]
        public async Task<IActionResult> ProductsWithLocationsPost([FromBody]ProductsWithLocationsRequest productsWithLocationsRequest) {
            return new ObjectResult(await _implementation.ProductsWithLocationsPostAsync(productsWithLocationsRequest));
        }
    }
}
